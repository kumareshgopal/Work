<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="2/4/2018 12:51:32 PM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="UKC10N1M1"
  DTS:CreatorName="GLOBALDEV\alim"
  DTS:DTSID="{7BF58C4B-7C5D-4381-B362-ED0BE09A0BF7}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="11.0.7001.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="BackupRestoreExecution"
  DTS:PackageType="5"
  DTS:VersionBuild="205"
  DTS:VersionGUID="{0651D138-DD41-4B74-B747-85CD533959AD}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DynamicConnection]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{A01A4DE8-E16A-4262-B057-E3DD855948B5}"
      DTS:ObjectName="DynamicConnection">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::DynamicConnection]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=;Initial Catalog=Master;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{FF374FD8-B492-45B6-A70B-1E4284A810C6}"
      DTS:ObjectName="AddAWOPowershell">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">powershell -noprofile -NonInteractive -nologo -file "C:\Temp\PSscripts\AWO-ADDBtogroup.ps1" -action "add"</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="11"
      DTS:DTSID="{73C2E0BF-10DB-4DC3-AABD-D55580B0D51E}"
      DTS:ObjectName="AWOSetup">
      <DTS:Property
        DTS:DataType="11"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{D215BAF0-043B-4524-9146-F0E7E330B987}"
      DTS:ObjectName="BackupRestoreConfigID">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{8774852A-7B02-4AE1-B950-9B5CF477EC66}"
      DTS:ObjectName="BatchExecutionId">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{2070E6D8-EA48-4B07-89DB-2289218ED04C}"
      DTS:ObjectName="DatabaseName">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{E9AD284C-28BC-4A75-94D2-BE854CCDAB1F}"
      DTS:ObjectName="DatabaseServerName">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{74EABAF5-C645-47C1-8D4B-4B6F08B4E977}"
      DTS:ObjectName="EmailToBI">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{91C1D78F-7DCF-4E7F-8719-2468FAE0E295}"
      DTS:ObjectName="ExecutionPlanId">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="11"
      DTS:DTSID="{5EB1CFB8-AE2F-4079-B74D-B217476E7607}"
      DTS:ObjectName="IsBackup">
      <DTS:Property
        DTS:DataType="11"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="11"
      DTS:DTSID="{3A65F0DA-2188-462A-A4F0-439CA141E68B}"
      DTS:ObjectName="IsRestore">
      <DTS:Property
        DTS:DataType="11"
        DTS:Name="ParameterValue">-1</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="11"
      DTS:DTSID="{EDF4B4C0-C4B5-4F28-A24E-25165750525F}"
      DTS:ObjectName="OverrideExistingDB">
      <DTS:Property
        DTS:DataType="11"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{C9A1DF92-1226-4332-8E6F-852AF3718FC1}"
      DTS:ObjectName="RecoveryMode">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">RECOVERY</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{19CB0066-5C73-468B-A90C-54356361370F}"
      DTS:ObjectName="RemoveAWOlPowershell">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">powershell -noprofile -NonInteractive -nologo -file "C:\Temp\PSscripts\AWO-ADDBtogroup.ps1" -action "del"</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{84653BFF-267C-48F2-AE71-2ED142777C43}"
      DTS:ObjectName="Script">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{45C333A0-FA89-4A83-8591-0B28B8E73C40}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;Data Source=&quot;+ @[$Package::DatabaseServerName] +&quot;;Initial Catalog=Master;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DynamicConnection">
      <DTS:VariableValue
        DTS:DataType="8">Data Source=;Initial Catalog=Master;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{85586A4D-CC21-4A70-98FD-0BE6364DF563}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ExecutionStatus">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9C687686-D012-46D5-B527-3247F2E76D0D}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="intDBExt">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A8258620-1B4E-44B3-98B2-E220F660BAC8}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strErrorDes">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Backup"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{A05DD8B6-5B1E-4A80-BE81-47BB5D4368FE}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Backup">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Backup\Backup DB"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{f2e6a06f-f98e-4c6e-b8de-6a3143c5c188}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Backup DB"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:EventHandlers>
            <DTS:EventHandler
              DTS:refId="Package\Backup\Backup DB.EventHandlers[OnError]"
              DTS:CreationName="OnError"
              DTS:DTSID="{693168DD-E2D6-47FF-B6BA-E5C0AC371BEF}"
              DTS:EventID="578872440"
              DTS:EventName="OnError"
              DTS:LocaleID="-1">
              <DTS:Variables>
                <DTS:Variable
                  DTS:CreationName=""
                  DTS:Description="The propagate property of the event"
                  DTS:DTSID="{E78B0BDB-7597-4DDD-A93B-987485E38276}"
                  DTS:IncludeInDebugDump="6789"
                  DTS:Namespace="System"
                  DTS:ObjectName="Propagate">
                  <DTS:VariableValue
                    DTS:DataType="11">-1</DTS:VariableValue>
                </DTS:Variable>
              </DTS:Variables>
              <DTS:Executables>
                <DTS:Executable
                  DTS:refId="Package\Backup\Backup DB.EventHandlers[OnError]\UpdateScript"
                  DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
                  DTS:Description="Execute SQL Task"
                  DTS:DTSID="{13b946c8-360a-4642-852a-66d9c199123f}"
                  DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="UpdateScript"
                  DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
                  <DTS:Variables />
                  <DTS:EventHandlers>
                    <DTS:EventHandler
                      DTS:refId="Package\Backup\Backup DB.EventHandlers[OnError]\UpdateScript.EventHandlers[OnError]"
                      DTS:CreationName="OnError"
                      DTS:DTSID="{6e361eb5-88be-4126-9083-f55ac9770eac}"
                      DTS:EventID="425597624"
                      DTS:EventName="OnError"
                      DTS:LocaleID="-1">
                      <DTS:Variables>
                        <DTS:Variable
                          DTS:CreationName=""
                          DTS:Description="The propagate property of the event"
                          DTS:DTSID="{7163d5ba-e031-4d36-a283-780f98729091}"
                          DTS:IncludeInDebugDump="6789"
                          DTS:Namespace="System"
                          DTS:ObjectName="Propagate">
                          <DTS:VariableValue
                            DTS:DataType="11">-1</DTS:VariableValue>
                        </DTS:Variable>
                      </DTS:Variables>
                      <DTS:Executables>
                        <DTS:Executable
                          DTS:refId="Package\Backup\Backup DB.EventHandlers[OnError]\UpdateScript.EventHandlers[OnError]\UpdateScript"
                          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
                          DTS:Description="Execute SQL Task"
                          DTS:Disabled="True"
                          DTS:DTSID="{792e0372-2337-4f9d-b1fa-de3008f87e72}"
                          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
                          DTS:LocaleID="-1"
                          DTS:ObjectName="UpdateScript"
                          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
                          <DTS:Variables />
                          <DTS:ObjectData>
                            <SQLTask:SqlTaskData
                              SQLTask:Connection="{324AC591-0DB7-4A83-AA41-CCA15B9E2151}"
                              SQLTask:SqlStatementSource="  Update DEVOPS.RESTORELIST&#xA;  SET RestoreScript = ?&#xA;  WHERE RestoreListID = ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                              <SQLTask:ParameterBinding
                                SQLTask:ParameterName="1"
                                SQLTask:DtsVariableName="User::RestoreListID"
                                SQLTask:ParameterDirection="Input"
                                SQLTask:DataType="3"
                                SQLTask:ParameterSize="-1" />
                              <SQLTask:ParameterBinding
                                SQLTask:ParameterName="0"
                                SQLTask:DtsVariableName="System::ErrorDescription"
                                SQLTask:ParameterDirection="Input"
                                SQLTask:DataType="3"
                                SQLTask:ParameterSize="-1" />
                            </SQLTask:SqlTaskData>
                          </DTS:ObjectData>
                        </DTS:Executable>
                      </DTS:Executables>
                    </DTS:EventHandler>
                  </DTS:EventHandlers>
                  <DTS:ObjectData>
                    <SQLTask:SqlTaskData
                      SQLTask:Connection="{324AC591-0DB7-4A83-AA41-CCA15B9E2151}"
                      SQLTask:SqlStatementSource="  Update DEVOPS.RESTORELIST&#xA;  SET ErrorDesc = ? ,&#xA;RestoreScript = null&#xA;  WHERE RestoreListID = ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="0"
                        SQLTask:DtsVariableName="System::ErrorDescription"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="129"
                        SQLTask:ParameterSize="-1" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="1"
                        SQLTask:DtsVariableName="$Package::RestoreListID"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="3"
                        SQLTask:ParameterSize="-1" />
                    </SQLTask:SqlTaskData>
                  </DTS:ObjectData>
                </DTS:Executable>
              </DTS:Executables>
            </DTS:EventHandler>
          </DTS:EventHandlers>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{A01A4DE8-E16A-4262-B057-E3DD855948B5}"
              SQLTask:SqlStatementSource="&#xA;DECLARE @strSQL VARCHAR(MAX) =?&#xA;&#xA;&#xA;EXEC   (@strSQL)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="$Package::Script"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Backup\Update  Status"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{80763a71-c58d-4fcb-bb3c-d4a5d4c607c3}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Update  Status"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{324AC591-0DB7-4A83-AA41-CCA15B9E2151}"
              SQLTask:SqlStatementSource="DECLARE @BackupRestoreConfigID INT =?&#xA;DECLARE @BatchExecutionId  INT =?&#xA;&#xA;&#xA;  Update Devops.BatchExecution&#xA;  SET Status = 'InProgress'&#xA;  WHERE @BackupRestoreConfigID = @BackupRestoreConfigID&#xA;and BatchExecutionId =@BatchExecutionId" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="$Package::BackupRestoreConfigID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="$Package::BatchExecutionId"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Backup\Update Completed"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{5011c20d-8426-40af-99af-1cd72e8d91ae}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Update Completed"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{324AC591-0DB7-4A83-AA41-CCA15B9E2151}"
              SQLTask:SqlStatementSource="DECLARE @BackupRestoreConfigID INT =?&#xA;DECLARE @BatchExecutionId  INT =?&#xA;&#xA;&#xA;&#xA;  Update Devops.BatchExecution&#xA;  SET Status = 'Completed'&#xA; ,ErrorDesc= NULL&#xA;,BatchEnd =GetDate()&#xA;  WHERE @BackupRestoreConfigID = @BackupRestoreConfigID&#xA;and BatchExecutionId =@BatchExecutionId" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="$Package::BackupRestoreConfigID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="$Package::BatchExecutionId"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Backup\Update Failed"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{0b525f2d-bd32-480b-9d1b-bb6d7baef35d}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Update Failed"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{324AC591-0DB7-4A83-AA41-CCA15B9E2151}"
              SQLTask:SqlStatementSource="DECLARE @BackupRestoreConfigID INT =?&#xA;DECLARE @BatchExecutionId  INT =?&#xA;DECLARE @ErrorDesc VARCHAR(2000) =?&#xA;&#xA;&#xA;  Update Devops.BatchExecution&#xA;  SET Status = 'Failed'&#xA; ,ErrorDesc= @ErrorDesc&#xA;  WHERE @BackupRestoreConfigID = @BackupRestoreConfigID&#xA;and BatchExecutionId =@BatchExecutionId" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="$Package::BackupRestoreConfigID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="$Package::BatchExecutionId"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::strErrorDes"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Backup.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{D3BE36BE-CA6A-4906-937B-9E230B02EEFD}"
          DTS:From="Package\Backup\Backup DB"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Backup\Update Completed" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Backup.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{D553002C-ECAF-4E18-9663-DEAA1FD06851}"
          DTS:From="Package\Backup\Backup DB"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Backup\Update Failed"
          DTS:Value="1" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Backup.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{D2A799FF-B403-4BB5-A37D-4BFB0E343072}"
          DTS:From="Package\Backup\Update  Status"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Backup\Backup DB" />
      </DTS:PrecedenceConstraints>
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\Backup.EventHandlers[OnError]"
          DTS:CreationName="OnError"
          DTS:DTSID="{555B82F3-11B3-49A1-AEDC-296868CB33F3}"
          DTS:EventID="578872440"
          DTS:EventName="OnError"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{877FA688-DEFA-48D6-9D77-5BB986DB5040}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Backup.EventHandlers[OnError]\Script Task"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Script Task"
              DTS:DTSID="{cc9409eb-32b1-4be9-a99c-f6a03db44001}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="Script Task">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_da9c4264d5b4409ba3ad076316fda6e3"
                  VSTAMajorVersion="3"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="System::ErrorDescription"
                  ReadWriteVariables="User::strErrorDes">
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_7f28eeae1983421fad1db62ebb482474")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_7f28eeae1983421fad1db62ebb482474")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_7f28eeae1983421fad1db62ebb482474
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            //System::ErrorDescription

            

            Dts.Variables["User::strErrorDes"].Value = Dts.Variables["User::strErrorDes"].Value.ToString() + Dts.Variables["System::ErrorDescription"].Value.ToString();

            MessageBox.Show(Dts.Variables["User::strErrorDes"].Value.ToString());

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_7f28eeae1983421fad1db62ebb482474</msb:CodeName>
		<msb:DisplayName>ST_7f28eeae1983421fad1db62ebb482474</msb:DisplayName>
		<msb:ProjectId>{F7AEC810-992B-43CC-BA95-5FB6F6A35EA5}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_da9c4264d5b4409ba3ad076316fda6e3.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7f28eeae1983421fad1db62ebb482474.Properties.Settings.get_Default():ST_7f28eeae1983421fad1db62ebb482474.Properties.Sett" +
    "ings")]

namespace ST_7f28eeae1983421fad1db62ebb482474.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="ST_da9c4264d5b4409ba3ad076316fda6e3.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{77d59a8b-7a1c-4494-a09c-8596b752e7cf}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_7f28eeae1983421fad1db62ebb482474</RootNamespace><AssemblyName>ST_da9c4264d5b4409ba3ad076316fda6e3</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7f28eeae1983421fad1db62ebb482474.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7f28eeae1983421fad1db62ebb482474.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7f28eeae1983421fad1db62ebb482474.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_7f28eeae1983421fad1db62ebb482474.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_7f28eeae1983421fad1db62ebb482474.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_7f28eeae1983421fad1db62ebb482474.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDALf2eloAAAAAAAAAAOAAAiELAQsAABAAAAAIAAAAAAAADi8A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAALwuAABPAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAFA8AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADw
LgAAAAAAAEgAAAACAAUAGCIAAKQMAAABAAAAAAAAAGAhAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqAAMwBACPAAAAAAAAAAIoFgAACm8XAAAKcnMAAHBvGAAACgIoFgAACm8X
AAAKcnMAAHBvGAAACm8ZAAAKbxoAAAoCKBYAAApvFwAACnKXAABwbxgAAApvGQAACm8aAAAKKBsA
AApvHAAACgIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKbxoAAAooHQAACiYCKBYAAAoWbx4AAAoq
HgIoHwAACioAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVy
LCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRv
a2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQC
AAAAAAAAAAAAAABQQURQQURQtAAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAA
APQDAAAjfgAAYAQAAPgFAAAjU3RyaW5ncwAAAABYCgAAzAAAACNVUwAkCwAAEAAAACNHVUlEAAAA
NAsAAHABAAAjQmxvYgAAAAAAAAACAAABVx2iAQkDAAAA+iUzABYAAAEAAAAgAAAABQAAAAYAAAAJ
AAAAAQAAAB8AAAACAAAADwAAAAEAAAACAAAAAwAAAAQAAAABAAAABQAAAAEAAAABAAAAAAAKAAEA
AAAAAAYAwQC6AAoA3QDIAA4APQEUAQYAWQG6AAYAbwFeAQYAoAGLAQYAVwI9AgYAggJwAgYAmQJw
AgYAtgJwAgYA1QJwAgYA7gJwAgYABwNwAgYAIgNwAgYAPQNwAgYAVgNwAgYAjwNvAwYArwNvAwYA
4APNAwYA/QO6AAYAAgS6AAYAJgRwAgoAUgQ8BAoAawQ8BAYAgARvAw4AogQUAQ4AxAQUARIAHQX9
BBIANQX9BAYAWgW6ABYAhwVyBRYAkgVyBQAAAAABAAAAAAABAAEAAAAQADIAPAAFAAEAAQAAARAA
awA8AAkAAwAFAAEAEAB0AH8ADQAEAAgAAwEAAKMAAAARAAQACgARAH8BEwARAKwBFwARAPYBOQAG
Bh8CRwBWgCcCSgBWgC8CSgBQIAAAAACDGLwBGwABAFggAAAAAJMIwgEfAAEAkSAAAAAAkwjWASQA
AQCYIAAAAACTCOIBKQABAKAgAAAAAJYIBgI9AAIAsyAAAAAAhhi8ARsAAgCnIAAAAACRGJsEiQAC
ALwgAAAAAIYAGgIbAAIAVyEAAAAAhhi8ARsAAgAAAAEANwI5ALwBWABBALwBWABJALwBWABRALwB
WABZALwBWABhALwBWABpALwBWABxALwBWAB5ALwBWACBALwBWACJALwBXQCRALwBGwCZALwBGwAJ
ALwBGwChABQEYgChAC8EaQApALwBbgC5ALwBegDJALwBGwARALwBGwDRALwBGwAZANYEjQDZACcF
kgDhAD4FlwDpAEcFnQAJAFEFoQDxAGEFpQDpAGgFqwD5AJ8FsADZAKQFXQAZALwBGwAIABQATgAI
ABgAUwApAJMAgAAuABsAKAEuACMAKAEuAGMATgEuAAsAtwAuABMA/wAuADMA/wAuACsAKAEuADsA
LgEuAEMAKAEuAFsARQFDAGsAUwBJAJMAgABhAJsAUwCDAKsAUwB1AAIAAQADAAMAAABvAS8AAADu
ATQAAAASAkIAAgACAAMAAgADAAUAAQAEAAUAAgAFAAcABIAAAAEAAADUGZtaAAAAAAAAfwAAAAQA
AAAAAAAAAAAAAAEAsQAAAAAABAAAAAAAAAAAAAAAAQC6AAAAAAALAAAAAAAAAAAAAAAKAPUAAAAA
AAsAAAAAAAAAAAAAAAoA3gQAAAAABAAAAAAAAAAAAAAAAQByBQAAAAAAAAAAAQAAALMFAAAFAAQA
AAAAPE1vZHVsZT4AU1RfN2YyOGVlYWUxOTgzNDIxZmFkMWRiNjJlYmI0ODI0NzQuZGxsAFJlc291
cmNlcwBTVF83ZjI4ZWVhZTE5ODM0MjFmYWQxZGI2MmViYjQ4MjQ3NC5Qcm9wZXJ0aWVzAFNldHRp
bmdzAFNjcmlwdE1haW4AU1RfN2YyOGVlYWUxOTgzNDIxZmFkMWRiNjJlYmI0ODI0NzQAU2NyaXB0
UmVzdWx0cwBtc2NvcmxpYgBTeXN0ZW0AT2JqZWN0AFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxp
Y2F0aW9uU2V0dGluZ3NCYXNlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3Nv
ZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVs
QmFzZQBFbnVtAFN5c3RlbS5SZXNvdXJjZXMAUmVzb3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5
c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJlc291cmNlQ3VsdHVyZQAuY3RvcgBnZXRf
UmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAEN1bHR1cmUAZGVmYXVsdElu
c3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQATWFpbgB2YWx1ZV9fAFN1Y2Nlc3MARmFpbHVyZQB2
YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBT
eXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRp
b25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFu
eUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRy
aWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRl
AEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2Vz
AENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRy
aWJ1dGUAU3lzdGVtLkRpYWdub3N0aWNzAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUAVHlw
ZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBBc3NlbWJseQBnZXRfQXNzZW1i
bHkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JC
cm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQAuY2N0b3IAU1NJU1Njcmlw
dFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAFNjcmlwdE9iamVjdE1vZGVsAGdldF9EdHMATWljcm9z
b2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUA
VmFyaWFibGVzAGdldF9WYXJpYWJsZXMAVmFyaWFibGUAZ2V0X0l0ZW0AZ2V0X1ZhbHVlAFRvU3Ry
aW5nAFN0cmluZwBDb25jYXQAc2V0X1ZhbHVlAFN5c3RlbS5XaW5kb3dzLkZvcm1zAE1lc3NhZ2VC
b3gARGlhbG9nUmVzdWx0AFNob3cAc2V0X1Rhc2tSZXN1bHQAU1RfN2YyOGVlYWUxOTgzNDIxZmFk
MWRiNjJlYmI0ODI0NzQuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAAAAAHFTAFQAXwA3
AGYAMgA4AGUAZQBhAGUAMQA5ADgAMwA0ADIAMQBmAGEAZAAxAGQAYgA2ADIAZQBiAGIANAA4ADIA
NAA3ADQALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAACNVAHMAZQBy
ADoAOgBzAHQAcgBFAHIAcgBvAHIARABlAHMAADFTAHkAcwB0AGUAbQA6ADoARQByAHIAbwByAEQA
ZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAcEKeYMJ8vkqzr/uhX6npiQAIt3pcVhk04IkIiYRdzYCA
zJEDBhIVAwYSGQMgAAEEAAASFQQAABIZBQABARIZBAgAEhUECAASGQMGEgwEAAASDAQIABIMAgYI
AwYRFAQAAAAABAEAAAAEIAEBDgQgAQEIBgABElERVQQgABJZBiACAQ4SWQQHARIVBSABARFhCAEA
AgAAAAAAAwAAAQQgABJtBCAAEnEFIAESdRwDIAAcAyAADgUAAg4ODgQgAQEcBgABEYCBDkcBABou
TkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBG
cmFtZXdvcmsgNCgBACNTVF83ZjI4ZWVhZTE5ODM0MjFmYWQxZGI2MmViYjQ4MjQ3NAAABQEAAAAA
FgEAEUNvcHlyaWdodCBAICAyMDE4AAAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25U
aHJvd3MBAAAA5C4AAAAAAAAAAAAA/i4AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPAuAAAAAAAA
AAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQCbWtQZAAABAJta1Bk/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAA
MAAwADAANABiADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBU
AF8ANwBmADIAOABlAGUAYQBlADEAOQA4ADMANAAyADEAZgBhAGQAMQBkAGIANgAyAGUAYgBiADQA
OAAyADQANwA0AAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYANgAx
ADIALgAyADMAMQA5ADUAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8A
NwBmADIAOABlAGUAYQBlADEAOQA4ADMANAAyADEAZgBhAGQAMQBkAGIANgAyAGUAYgBiADQAOAAy
ADQANwA0AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADgAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBp
AGwAZQBuAGEAbQBlAAAAUwBUAF8ANwBmADIAOABlAGUAYQBlADEAOQA4ADMANAAyADEAZgBhAGQA
MQBkAGIANgAyAGUAYgBiADQAOAAyADQANwA0AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0
AE4AYQBtAGUAAAAAAFMAVABfADcAZgAyADgAZQBlAGEAZQAxADkAOAAzADQAMgAxAGYAYQBkADEA
ZABiADYAMgBlAGIAYgA0ADgAMgA0ADcANAAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4ANgA2ADEAMgAuADIAMwAxADkANQAAAAAASAAPAAEAQQBzAHMAZQBtAGIA
bAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgA2ADEAMgAuADIAMwAxADkANQAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAAAQPwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:EventHandler>
      </DTS:EventHandlers>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Restore"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{0F475F6A-ED3F-43D9-9985-326A9AFE1BE1}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:ForceExecutionResult="0"
      DTS:LocaleID="-1"
      DTS:MaxErrorCount="0"
      DTS:ObjectName="Restore">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Restore\AWO"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{69d1e756-1de0-423b-8f99-8d152872f6be}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="AWO"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{324AC591-0DB7-4A83-AA41-CCA15B9E2151}"
              SQLTask:SqlStatementSource="&#xA;DECLARE @DatabaseName  VARCHAR(100) =?&#xA;&#xA;DECLARE @intDBExt int &#xA;&#xA;&#xA;&#xA;IF EXISTS(SELECT name FROM sys.databases WHERE name = @DatabaseName)&#xA;SET @intDBExt  =1&#xA;ELSE&#xA;SET @intDBExt  =0&#xA;&#xA;SELECT @intDBExt  "
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="0"
                SQLTask:DtsVariableName="User::intDBExt" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="$Package::DatabaseName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Restore\Create Snapshot"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{17d673dd-271d-4a1e-b517-3780927fc8b7}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create Snapshot"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="5">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{A01A4DE8-E16A-4262-B057-E3DD855948B5}"
              SQLTask:SqlStatementSource="if exists (select name from sys.databases where state=0 and source_database_id is null and name =?)&#xA;begin&#xA;&#xA;&#xA;/*******************************************************&#xA;--------Snapshot file delete if exists&#xA;********************************************************/&#xA;--Set nocount on&#xA;&#xA;declare  @Delete_snapshotfile table&#xA;( &#xA;id int identity(1,1),&#xA;    [db] VARCHAR(128),&#xA;    [name] VARCHAR(128),&#xA;    [SnapFile_name] VARCHAR(500)&#xA;)&#xA;&#xA;&#xA;DECLARE @DatabasesName  VARCHAR(100) =  ?--  'Talbot_DW_Transform'&#xA;Declare @script varchar(3000)&#xA;declare @snapshot_filename varchar(3000)&#xA;declare @result varchar(3000)&#xA;DECLARE @FileExists int&#xA;&#xA;&#xA;insert into @Delete_snapshotfile&#xA;EXEC sp_MSforeachdb 'use [?] SELECT db_name(), name ,physical_name FROM sys.database_files where  [state] =0 and  type = ''0'''&#xA;&#xA;&#xA;update @Delete_snapshotfile set SnapFile_name = replace(replace(SnapFile_name,'.mdf','.ss'),'.ndf','.ss')&#xA;&#xA;&#xA;----check &#xA;--select * from @Delete_snapshotfile where db =@DatabaseName&#xA;&#xA;------Loop&#xA;&#xA;Use [Master]&#xA;&#xA;DECLARE SnapFile_name_Cursor CURSOR FOR  &#xA; SELECT &#xA;  SnapFile_name  &#xA; FROM &#xA;  @Delete_snapshotfile &#xA; WHERE&#xA;  db =@DatabasesName&#xA; &#xA;OPEN SnapFile_name_Cursor; &#xA;FETCH NEXT FROM SnapFile_name_Cursor into @snapshot_filename;  &#xA;WHILE @@FETCH_STATUS = 0  &#xA;   BEGIN &#xA;   --set @snapshot_filename ='F:\Microsoft SQL Server\Data\abc.ss'&#xA; set @script ='del &quot;' + @snapshot_filename + '&quot;'&#xA; &#xA; EXEC master..xp_FileExist @snapshot_filename, @FileExists out&#xA; IF @FileExists =1&#xA;  exec master..xp_cmdshell @script &#xA;  --print (@script)&#xA;&#xA;  FETCH NEXT FROM SnapFile_name_Cursor into @snapshot_filename&#xA;END&#xA;&#xA;CLOSE SnapFile_name_Cursor;  &#xA;DEALLOCATE SnapFile_name_Cursor;  &#xA;&#xA;-------------------------------------------------&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;------------------------------------------------Snapshot Creation&#xA;&#xA;USE Master&#xA;&#xA;DECLARE @dbname varchar(255)&#xA; SET @dbname = ?  -- 'RI' --&lt;&lt;&lt;&lt;&lt;&lt; SET SOURCE DATABASE NAME HERE &gt;&gt;&gt;&gt;&gt;&gt;&#xA;&#xA;SET QUOTED_IDENTIFIER ON&#xA; SET NOCOUNT ON&#xA;  DECLARE @SnapshotSuffix varchar(50)&#xA; DECLARE @sql table (id int identity(1,1), data varchar(max))&#xA; DECLARE @FileIDExceptionList table (id int)&#xA;&#xA;&#xA; SET @SnapshotSuffix = '_snapshot'&#xA;  INSERT INTO @FileIDExceptionList (id) values (2) -- default ldf id = 2 &lt;&lt;&lt;&lt;&lt;&lt; Add additional File Exceptions here &gt;&gt;&gt;&gt;&gt;&gt;&#xA;&#xA; IF (SELECT (1) FROM sysfiles WHERE filename like '%ldf%' and fileid not in (SELECT id FROM @FileIDExceptionList)) is not null&#xA;  RAISERROR ('you have non default MDF or LDF file extensions that will be excluded FROM this scipt, please add them to the fileID exception list.', 16,1)&#xA;&#xA; IF (SELECT name FROM sys.databases WHERE name = @dbname) IS NULL&#xA;  RAISERROR ('Cannot find the database specified. please check that it exists and try again', 16,1)&#xA;  ELSE&#xA;  BEGIN&#xA;  INSERT INTO @sql values ('use master'),('CREATE DATABASE [' + @dbname + @SnapshotSuffix + '] ON')&#xA; INSERT INTO @sql&#xA;  SELECT '( NAME = [' + name +'] , FILENAME = ''' + REPLACE(physical_name, '.ndf', '.ss') + '''),' FROM sys.master_files&#xA;  WHERE database_id = DB_ID(@dbname) AND physical_name like '%.ndf%'&#xA; UNION&#xA;  SELECT '( NAME = [' + name +'] , FILENAME = ''' + REPLACE(physical_name, '.mdf', '.ss') + '''),' FROM sys.master_files&#xA;  WHERE database_id = DB_ID(@dbname) AND physical_name like '%.mdf%'&#xA; INSERT INTO @sql values ('AS SNAPSHOT OF [' + @dbname + '];'),('')&#xA;&#xA; UPDATE @sql&#xA;  SET data = REPLACE(data,'),',')') WHERE id in (SELECT MAX(id) -2 FROM @sql)&#xA;  --SELECT data AS '– Generated Script -- 'FROM @sql&#xA;  END&#xA;&#xA;&#xA; declare @sqlscript varchar(max)&#xA;&#xA; select @sqlscript = &#xA; &#xA; (select&#xA;   distinct  &#xA;    stuff((&#xA;        select ' ' + u.data&#xA;        from @sql u&#xA;        where u.id = id&#xA;        order by u.id&#xA;        --for xml path('')    ),1,1,'')&#xA;  FOR XML PATH(''), TYPE).value(N'(./text())[1]', N'varchar(max)'), 1, 1, '')&#xA;   as userlist&#xA;from @sql&#xA;group by data&#xA;)&#xA; &#xA; from @sql&#xA;&#xA;&#xA;&#xA;print (@sqlscript)&#xA;exec (@sqlscript)&#xA;&#xA;end" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="$Package::DatabaseName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="$Package::DatabaseName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="$Package::DatabaseName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Restore\Delete Existing Snapshot"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{95383e71-0461-4bc5-ab0c-5cb5ebef0537}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Delete Existing Snapshot"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{A01A4DE8-E16A-4262-B057-E3DD855948B5}"
              SQLTask:SqlStatementSource="&#xA;&#xA;declare  @SnapshotName table&#xA;&#x9;( &#xA;&#x9;id int identity(1,1),&#xA;&#x9;name varchar(100)&#xA;&#x9;)&#xA;&#xA;DECLARE @DatabaseName  VARCHAR(100) = ? --'bimetadata'&#xA;&#xA;Insert into @SnapshotName&#xA;select &#xA;&#x9;[name] &#xA;from &#xA;&#x9;master.sys.databases &#xA;where &#xA;&#x9;source_database_id in &#xA;&#x9;(&#xA;&#x9;&#x9;select database_id from &#xA;&#x9;&#x9;master.sys.databases&#xA;&#x9;&#x9;where name  =  @DatabaseName &#xA;&#x9;)&#xA;&#xA;&#xA;Declare @NAME varchar(100)&#xA;Declare @script varchar(max)&#xA;declare @maxcnt varchar(100)&#xA;declare @LoopCounter int =1&#xA;&#xA;select @maxcnt = count(Name) from @SnapshotName&#xA;&#xA;WHILE(@LoopCounter &lt;= @MaxCnt)&#xA;BEGIN&#xA;&#xA;&#x9;set @NAME = (select name from @SnapshotName where id=@LoopCounter)&#xA;&#x9;&#xA;&#x9;set @script ='USE [Master]' + CHAR(13) + CHAR(10)+&#xA;&#x9;' Drop DATABASE [' +@NAME +']'&#xA;&#x9;&#xA;&#x9;exec (@script)&#xA;&#x9;--print @script&#xA;&#xA; &#xA;&#x9;SET @LoopCounter  = @LoopCounter  + 1        &#xA;END&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="$Package::DatabaseName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Restore\Kill Sessions"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:Disabled="True"
          DTS:DTSID="{0816206a-7534-473e-890f-66956f704568}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Kill Sessions"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{A01A4DE8-E16A-4262-B057-E3DD855948B5}"
              SQLTask:SqlStatementSource="&#xA;DECLARE @DatabaseName  VARCHAR(100) =  ?-- 'Talbot_Warehouse' --? --'bimetadata'&#xA;&#xA;use Master&#xA;&#xA;DECLARE @Session INT,@SQL NVARCHAR(100)&#xA;&#xA;DECLARE db_cursor CURSOR FOR &#xA;&#xA;select spid as SessionId&#xA;from sys.sysprocesses sp&#xA;INNER JOIN sys.dm_exec_sessions s ON sp.spid = s.session_id&#xA;WHERE loginame not IN ('sa','GLOBALDEV\svcUKDEVSQLAgent','GLOBALDEV\svcUKDEVSQLSSRS')&#xA;and dbid in ( select database_id from sys.databases where name = @DatabaseName)&#xA;                                                              &#xA;&#xA;OPEN db_cursor   &#xA;FETCH NEXT FROM db_cursor INTO @Session&#xA;WHILE @@FETCH_STATUS = 0   &#xA;&#xA;BEGIN &#xA;&#xA;SET @SQL = 'KILL ' + CAST(@Session as nvarchar(10))&#xA;&#xA;--PRINT (@SQL)&#xA;EXEC  (@SQL)&#xA;&#xA;FETCH NEXT FROM db_cursor INTO @Session&#xA;&#xA;END&#xA;&#xA;CLOSE db_cursor   &#xA;DEALLOCATE db_cursor &#xA;&#xA;&#xA;------" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="$Package::DatabaseName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Restore\MultiUser"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{874c945e-dba8-4981-9dcf-62f08a06c364}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="MultiUser"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{A01A4DE8-E16A-4262-B057-E3DD855948B5}"
              SQLTask:SqlStatementSource="&#xA;DECLARE @DatabaseName  VARCHAR(100) = ? &#xA;DECLARE @strSQL VARCHAR(MAX)&#xA;&#xA;&#xA;IF EXISTS(SELECT name FROM sys.databases WHERE user_access=1 and [state]=0 and name = @DatabaseName)&#xA;&#xA;BEGIN&#xA;&#xA;   SET @strSQL =  ' &#xA;  USE MASTER&#xA;   ALTER DATABASE ' + @DatabaseName + ' SET MULTI_USER' &#xA;&#xA;EXEC  (@strSQL)&#xA;--PRINT (@strSQL)&#xA;END" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="$Package::DatabaseName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Restore\NewDB"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{AF0F3039-3B35-4487-8DF5-6B2352A13226}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="NewDB">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Restore\NewDB\Create Snapshot"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Execute SQL Task"
              DTS:Disabled="True"
              DTS:DTSID="{19ee7458-521c-4937-873d-1c127b1123f8}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="Create Snapshot"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="4">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{A01A4DE8-E16A-4262-B057-E3DD855948B5}"
                  SQLTask:SqlStatementSource="&#xA;/*******************************************************&#xA;--------Snapshot file delete if exists&#xA;********************************************************/&#xA;--Set nocount on&#xA;&#xA;declare  @Delete_snapshotfile table&#xA;( &#xA;id int identity(1,1),&#xA;    [db] VARCHAR(128),&#xA;    [name] VARCHAR(128),&#xA;    [SnapFile_name] VARCHAR(500)&#xA;)&#xA;&#xA;&#xA;DECLARE @DatabasesName  VARCHAR(100) =  ?--  'Talbot_DW_Transform'&#xA;Declare @script varchar(3000)&#xA;declare @snapshot_filename varchar(3000)&#xA;declare @result varchar(3000)&#xA;DECLARE @FileExists int&#xA;&#xA;&#xA;insert into @Delete_snapshotfile&#xA;EXEC sp_MSforeachdb 'use [?] SELECT db_name(), name ,physical_name FROM sys.database_files where  [state] =0 and  type = ''0'''&#xA;&#xA;&#xA;update @Delete_snapshotfile set SnapFile_name = replace(replace(SnapFile_name,'.mdf','.ss'),'.ndf','.ss')&#xA;&#xA;&#xA;----check &#xA;--select * from @Delete_snapshotfile where db =@DatabaseName&#xA;&#xA;------Loop&#xA;&#xA;Use [Master]&#xA;&#xA;DECLARE SnapFile_name_Cursor CURSOR FOR  &#xA; SELECT &#xA;  SnapFile_name  &#xA; FROM &#xA;  @Delete_snapshotfile &#xA; WHERE&#xA;  db =@DatabasesName&#xA; &#xA;OPEN SnapFile_name_Cursor; &#xA;FETCH NEXT FROM SnapFile_name_Cursor into @snapshot_filename;  &#xA;WHILE @@FETCH_STATUS = 0  &#xA;   BEGIN &#xA;   --set @snapshot_filename ='F:\Microsoft SQL Server\Data\abc.ss'&#xA; set @script ='del &quot;' + @snapshot_filename + '&quot;'&#xA; &#xA; EXEC master..xp_FileExist @snapshot_filename, @FileExists out&#xA; IF @FileExists =1&#xA;  exec master..xp_cmdshell @script &#xA;  --print (@script)&#xA;&#xA;  FETCH NEXT FROM SnapFile_name_Cursor into @snapshot_filename&#xA;END&#xA;&#xA;CLOSE SnapFile_name_Cursor;  &#xA;DEALLOCATE SnapFile_name_Cursor;  &#xA;&#xA;-------------------------------------------------&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;------------------------------------------------Snapshot Creation&#xA;&#xA;USE Master&#xA;&#xA;DECLARE @dbname varchar(255)&#xA; SET @dbname = ?  -- 'RI' --&lt;&lt;&lt;&lt;&lt;&lt; SET SOURCE DATABASE NAME HERE &gt;&gt;&gt;&gt;&gt;&gt;&#xA;&#xA;SET QUOTED_IDENTIFIER ON&#xA; SET NOCOUNT ON&#xA;  DECLARE @SnapshotSuffix varchar(50)&#xA; DECLARE @sql table (id int identity(1,1), data varchar(max))&#xA; DECLARE @FileIDExceptionList table (id int)&#xA;&#xA;&#xA; SET @SnapshotSuffix = '_snapshot'&#xA;  INSERT INTO @FileIDExceptionList (id) values (2) -- default ldf id = 2 &lt;&lt;&lt;&lt;&lt;&lt; Add additional File Exceptions here &gt;&gt;&gt;&gt;&gt;&gt;&#xA;&#xA; IF (SELECT (1) FROM sysfiles WHERE filename like '%ldf%' and fileid not in (SELECT id FROM @FileIDExceptionList)) is not null&#xA;  RAISERROR ('you have non default MDF or LDF file extensions that will be excluded FROM this scipt, please add them to the fileID exception list.', 16,1)&#xA;&#xA; IF (SELECT name FROM sys.databases WHERE name = @dbname) IS NULL&#xA;  RAISERROR ('Cannot find the database specified. please check that it exists and try again', 16,1)&#xA;  ELSE&#xA;  BEGIN&#xA;  INSERT INTO @sql values ('use master'),('CREATE DATABASE [' + @dbname + @SnapshotSuffix + '] ON')&#xA; INSERT INTO @sql&#xA;  SELECT '( NAME = [' + name +'] , FILENAME = ''' + REPLACE(physical_name, '.ndf', '.ss') + '''),' FROM sys.master_files&#xA;  WHERE database_id = DB_ID(@dbname) AND physical_name like '%.ndf%'&#xA; UNION&#xA;  SELECT '( NAME = [' + name +'] , FILENAME = ''' + REPLACE(physical_name, '.mdf', '.ss') + '''),' FROM sys.master_files&#xA;  WHERE database_id = DB_ID(@dbname) AND physical_name like '%.mdf%'&#xA; INSERT INTO @sql values ('AS SNAPSHOT OF [' + @dbname + '];'),('')&#xA;&#xA; UPDATE @sql&#xA;  SET data = REPLACE(data,'),',')') WHERE id in (SELECT MAX(id) -2 FROM @sql)&#xA;  --SELECT data AS '– Generated Script -- 'FROM @sql&#xA;  END&#xA;&#xA;&#xA; declare @sqlscript varchar(max)&#xA;&#xA; select @sqlscript = &#xA; &#xA; (select&#xA;   distinct  &#xA;    stuff((&#xA;        select ' ' + u.data&#xA;        from @sql u&#xA;        where u.id = id&#xA;        order by u.id&#xA;        --for xml path('')    ),1,1,'')&#xA;  FOR XML PATH(''), TYPE).value(N'(./text())[1]', N'varchar(max)'), 1, 1, '')&#xA;   as userlist&#xA;from @sql&#xA;group by data&#xA;)&#xA; &#xA; from @sql&#xA;&#xA;&#xA;&#xA;print (@sqlscript)&#xA;exec (@sqlscript)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="$Package::DatabaseName"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="1"
                    SQLTask:DtsVariableName="$Package::DatabaseName"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Restore\NewDB\Drop Databsae If Exist"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{ef793dc0-91a4-40af-a4c3-88dd6cb7d536}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="Drop Databsae If Exist"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="4">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{A01A4DE8-E16A-4262-B057-E3DD855948B5}"
                  SQLTask:SqlStatementSource="&#xA;DECLARE @DatabaseName  VARCHAR(100) =?&#xA;DECLARE @strSQL VARCHAR(MAX)&#xA;&#xA;&#xA;&#xA;IF EXISTS(SELECT name FROM sys.databases WHERE name = @DatabaseName)&#xA;&#xA;BEGIN&#xA;&#xA;   SET @strSQL =  ' &#xA;  USE MASTER&#xA;   ALTER DATABASE ' + @DatabaseName + '  SET SINGLE_USER WITH ROLLBACK IMMEDIATE; ' +&#xA;    'DROP DATABASE ' + @DatabaseName + ';'&#xA;&#xA;&#xA;EXEC  (@strSQL)&#xA;END" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="$Package::DatabaseName"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Restore\NewDB\Remove Prod Users from DB"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{4a7bd250-fd94-4f76-8e9d-1eecb985774b}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="Remove Prod Users from DB"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="4">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{A01A4DE8-E16A-4262-B057-E3DD855948B5}"
                  SQLTask:SqlStatementSource="&#xA;DECLARE @DatabaseName  VARCHAR(100) =?&#xA;DECLARE @strSQL VARCHAR(MAX)&#xA;&#xA;&#xA;IF EXISTS(SELECT name FROM sys.databases WHERE name = @DatabaseName)&#xA;&#xA;BEGIN&#xA;&#xA;   SET @strSQL =  ' &#xA;  USE MASTER&#xA;   ALTER DATABASE ' + @DatabaseName + '  SET RECOVERY SIMPLE WITH NO_WAIT; ' &#xA;&#xA;EXEC  (@strSQL)&#xA;END" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="$Package::DatabaseName"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Restore\NewDB\Restore DB"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{eadfde65-53dd-4bc3-8f1e-ca0bb5f119a3}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="Restore DB"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="4">
              <DTS:Variables />
              <DTS:EventHandlers>
                <DTS:EventHandler
                  DTS:refId="Package\Restore\NewDB\Restore DB.EventHandlers[OnError]"
                  DTS:CreationName="OnError"
                  DTS:DTSID="{68e86454-244a-4c5a-bd31-12015d9ea5bc}"
                  DTS:EventID="578872440"
                  DTS:EventName="OnError"
                  DTS:LocaleID="-1">
                  <DTS:Variables>
                    <DTS:Variable
                      DTS:CreationName=""
                      DTS:Description="The propagate property of the event"
                      DTS:DTSID="{3c255d63-96bd-47f8-87f4-8011552244ca}"
                      DTS:IncludeInDebugDump="6789"
                      DTS:Namespace="System"
                      DTS:ObjectName="Propagate">
                      <DTS:VariableValue
                        DTS:DataType="11">-1</DTS:VariableValue>
                    </DTS:Variable>
                  </DTS:Variables>
                  <DTS:Executables />
                </DTS:EventHandler>
              </DTS:EventHandlers>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{A01A4DE8-E16A-4262-B057-E3DD855948B5}"
                  SQLTask:SqlStatementSource="&#xA;DECLARE @strSQL VARCHAR(MAX) =?&#xA;&#xA;&#xA;EXEC   (@strSQL)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="$Package::Script"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Restore\NewDB\SET RecoveryMode-Simple"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{3c9c76cf-7ac3-47c9-81fe-d4ee67982dba}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="SET RecoveryMode-Simple"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="4">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{A01A4DE8-E16A-4262-B057-E3DD855948B5}"
                  SQLTask:SqlStatementSource="&#xA;DECLARE @DatabaseName  VARCHAR(100) =?&#xA;DECLARE @strSQL VARCHAR(MAX)&#xA;&#xA;&#xA;IF EXISTS(SELECT name FROM sys.databases WHERE name = @DatabaseName)&#xA;&#xA;BEGIN&#xA;&#xA;   SET @strSQL =  ' &#xA;  USE MASTER&#xA;   ALTER DATABASE ' + @DatabaseName + '  SET RECOVERY SIMPLE WITH NO_WAIT; ' &#xA;&#xA;EXEC  (@strSQL)&#xA;END" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="$Package::DatabaseName"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Restore\NewDB\ShrinkLogs"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{3356921a-af8f-4382-970f-1caefad76ade}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="ShrinkLogs"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="4">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{A01A4DE8-E16A-4262-B057-E3DD855948B5}"
                  SQLTask:SqlStatementSource=" &#xA;IF OBJECT_ID('tempdb..#tmp') IS NOT NULL&#xA;    DROP TABLE #tmp&#xA;CREATE TABLE #tmp&#xA;(&#xA;    [db] NVARCHAR(128),&#xA;    [name] NVARCHAR(128),&#xA;    [size] decimal (12,2),&#xA; [used] decimal (12,2),&#xA;) &#xA; &#xA;INSERT #tmp&#xA;SELECT db_name(), name ,size/128.0 - CAST(FILEPROPERTY(name, 'SpaceUsed') AS int)/128.0, CAST(FILEPROPERTY(name, 'SpaceUsed') AS int)/128.0 FROM sys.database_files where  [state] =0 and  type = '1'&#xA; &#xA;&#xA;&#xA;&#xA;DECLARE @name AS NVARCHAR(128)&#xA;DECLARE @db AS NVARCHAR(128)&#xA;DECLARE @sql AS VARCHAR (294)&#xA;&#xA;     SELECT @name = name FROM #tmp&#xA;     SELECT @db = db FROM #tmp&#xA;&#xA;       SET @sql = 'Use ['+ (select db from #tmp where db = @db and name = @name) + '] dbcc shrinkfile ([' + @name + '], 0 , TRUNCATEONLY)'&#xA;    &#xA; --    print (@sql)&#xA;      EXEC ( @sql ) &#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="$Package::DatabaseName"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Restore\NewDB.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{B7C29D64-9C83-4555-BACA-E51C6E2EC6D8}"
              DTS:From="Package\Restore\NewDB\Drop Databsae If Exist"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Restore\NewDB\Restore DB" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Restore\NewDB.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{492829C9-211D-4186-ADC5-5E53B5CE7A47}"
              DTS:EvalOp="3"
              DTS:Expression="@[$Package::RecoveryMode] ==&quot;RECOVERY&quot;"
              DTS:From="Package\Restore\NewDB\Restore DB"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\Restore\NewDB\Remove Prod Users from DB" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Restore\NewDB.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{AF4933E2-3F0F-475D-AE64-54E59DAD2660}"
              DTS:From="Package\Restore\NewDB\Remove Prod Users from DB"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\Restore\NewDB\SET RecoveryMode-Simple" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Restore\NewDB.PrecedenceConstraints[Constraint 3]"
              DTS:CreationName=""
              DTS:DTSID="{47B7A0AC-3B2D-4A7C-B933-96EF81312EDC}"
              DTS:From="Package\Restore\NewDB\SET RecoveryMode-Simple"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 3"
              DTS:To="Package\Restore\NewDB\ShrinkLogs" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Restore\NewDB.PrecedenceConstraints[Constraint 4]"
              DTS:CreationName=""
              DTS:DTSID="{80854ADA-57F5-4D78-A39F-18965E08CBC8}"
              DTS:From="Package\Restore\NewDB\ShrinkLogs"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 4"
              DTS:To="Package\Restore\NewDB\Create Snapshot"
              DTS:Value="2" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Restore\OverrideDB"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{23cb4d42-e36b-4146-9fd6-2fd640e931b5}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="OverrideDB"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{324AC591-0DB7-4A83-AA41-CCA15B9E2151}"
              SQLTask:SqlStatementSource="Select 1" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Restore\OverrideExisitngDB"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{3b2ea4c4-e6b4-48bd-acf1-e3bcb81c223c}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="OverrideExisitngDB">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Restore\OverrideExisitngDB\Create Snapshot"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Execute SQL Task"
              DTS:Disabled="True"
              DTS:DTSID="{a2e472a1-4cc9-4a7a-95de-442043416bd6}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="Create Snapshot"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{A01A4DE8-E16A-4262-B057-E3DD855948B5}"
                  SQLTask:SqlStatementSource="if exists (select name from sys.databases where state=0 and source_database_id is null and name =?)&#xA;begin&#xA;&#xA;&#xA;/*******************************************************&#xA;--------Snapshot file delete if exists&#xA;********************************************************/&#xA;--Set nocount on&#xA;&#xA;declare  @Delete_snapshotfile table&#xA;( &#xA;id int identity(1,1),&#xA;    [db] VARCHAR(128),&#xA;    [name] VARCHAR(128),&#xA;    [SnapFile_name] VARCHAR(500)&#xA;)&#xA;&#xA;&#xA;DECLARE @DatabasesName  VARCHAR(100) =  ?--  'Talbot_DW_Transform'&#xA;Declare @script varchar(3000)&#xA;declare @snapshot_filename varchar(3000)&#xA;declare @result varchar(3000)&#xA;DECLARE @FileExists int&#xA;&#xA;&#xA;insert into @Delete_snapshotfile&#xA;EXEC sp_MSforeachdb 'use [?] SELECT db_name(), name ,physical_name FROM sys.database_files where  [state] =0 and  type = ''0'''&#xA;&#xA;&#xA;update @Delete_snapshotfile set SnapFile_name = replace(replace(SnapFile_name,'.mdf','.ss'),'.ndf','.ss')&#xA;&#xA;&#xA;----check &#xA;--select * from @Delete_snapshotfile where db =@DatabaseName&#xA;&#xA;------Loop&#xA;&#xA;Use [Master]&#xA;&#xA;DECLARE SnapFile_name_Cursor CURSOR FOR  &#xA;&#x9;SELECT &#xA;&#x9;&#x9;SnapFile_name  &#xA;&#x9;FROM &#xA;&#x9;&#x9;@Delete_snapshotfile &#xA;&#x9;WHERE&#xA;&#x9;&#x9;db =@DatabasesName&#xA; &#xA;OPEN SnapFile_name_Cursor; &#xA;FETCH NEXT FROM SnapFile_name_Cursor into @snapshot_filename;  &#xA;WHILE @@FETCH_STATUS = 0  &#xA;   BEGIN &#xA;   --set @snapshot_filename ='F:\Microsoft SQL Server\Data\abc.ss'&#xA;&#x9;set @script ='del &quot;' + @snapshot_filename + '&quot;'&#xA;&#x9;&#xA;&#x9;EXEC master..xp_FileExist @snapshot_filename, @FileExists out&#xA;&#x9;IF @FileExists =1&#xA;&#x9;&#x9;exec master..xp_cmdshell @script &#xA;&#x9;&#x9;--print (@script)&#xA;&#xA;  FETCH NEXT FROM SnapFile_name_Cursor into @snapshot_filename&#xA;END&#xA;&#xA;CLOSE SnapFile_name_Cursor;  &#xA;DEALLOCATE SnapFile_name_Cursor;  &#xA;&#xA;-------------------------------------------------&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;------------------------------------------------Snapshot Creation&#xA;&#xA;USE Master&#xA;&#xA;DECLARE @dbname varchar(255)&#xA; SET @dbname = ?  -- 'RI' --&lt;&lt;&lt;&lt;&lt;&lt; SET SOURCE DATABASE NAME HERE &gt;&gt;&gt;&gt;&gt;&gt;&#xA;&#xA;SET QUOTED_IDENTIFIER ON&#xA; SET NOCOUNT ON&#xA;  DECLARE @SnapshotSuffix varchar(50)&#xA; DECLARE @sql table (id int identity(1,1), data varchar(max))&#xA; DECLARE @FileIDExceptionList table (id int)&#xA;&#xA;&#xA; SET @SnapshotSuffix = '_snapshot'&#xA;  INSERT INTO @FileIDExceptionList (id) values (2) -- default ldf id = 2 &lt;&lt;&lt;&lt;&lt;&lt; Add additional File Exceptions here &gt;&gt;&gt;&gt;&gt;&gt;&#xA;&#xA; IF (SELECT (1) FROM sysfiles WHERE filename like '%ldf%' and fileid not in (SELECT id FROM @FileIDExceptionList)) is not null&#xA;  RAISERROR ('you have non default MDF or LDF file extensions that will be excluded FROM this scipt, please add them to the fileID exception list.', 16,1)&#xA;&#xA; IF (SELECT name FROM sys.databases WHERE name = @dbname) IS NULL&#xA;  RAISERROR ('Cannot find the database specified. please check that it exists and try again', 16,1)&#xA;  ELSE&#xA;  BEGIN&#xA;  INSERT INTO @sql values ('use master'),('CREATE DATABASE [' + @dbname + @SnapshotSuffix + '] ON')&#xA; INSERT INTO @sql&#xA;  SELECT '( NAME = [' + name +'] , FILENAME = ''' + REPLACE(physical_name, '.ndf', '.ss') + '''),' FROM sys.master_files&#xA;  WHERE database_id = DB_ID(@dbname) AND physical_name like '%.ndf%'&#xA; UNION&#xA;  SELECT '( NAME = [' + name +'] , FILENAME = ''' + REPLACE(physical_name, '.mdf', '.ss') + '''),' FROM sys.master_files&#xA;  WHERE database_id = DB_ID(@dbname) AND physical_name like '%.mdf%'&#xA; INSERT INTO @sql values ('AS SNAPSHOT OF [' + @dbname + '];'),('')&#xA;&#xA; UPDATE @sql&#xA;  SET data = REPLACE(data,'),',')') WHERE id in (SELECT MAX(id) -2 FROM @sql)&#xA;  --SELECT data AS '– Generated Script -- 'FROM @sql&#xA;  END&#xA;&#xA;&#xA; declare @sqlscript varchar(max)&#xA;&#xA; select @sqlscript = &#xA; &#xA; (select&#xA;   distinct  &#xA;    stuff((&#xA;        select ' ' + u.data&#xA;        from @sql u&#xA;        where u.id = id&#xA;        order by u.id&#xA;        --for xml path('')    ),1,1,'')&#xA;  FOR XML PATH(''), TYPE).value(N'(./text())[1]', N'varchar(max)'), 1, 1, '')&#xA;   as userlist&#xA;from @sql&#xA;group by data&#xA;)&#xA; &#xA; from @sql&#xA;&#xA;&#xA;&#xA;print (@sqlscript)&#xA;exec (@sqlscript)&#xA;&#xA;end" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="$Package::DatabaseName"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="1"
                    SQLTask:DtsVariableName="$Package::DatabaseName"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Restore\OverrideExisitngDB\MultiUser"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{a2ac9a4a-d033-48e1-bb5e-1143c5dae381}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="MultiUser"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{A01A4DE8-E16A-4262-B057-E3DD855948B5}"
                  SQLTask:SqlStatementSource="&#xA;DECLARE @DatabaseName  VARCHAR(100) =?&#xA;DECLARE @strSQL VARCHAR(MAX)&#xA;&#xA;&#xA;IF EXISTS(SELECT name FROM sys.databases WHERE name = @DatabaseName)&#xA;&#xA;BEGIN&#xA;&#xA;   SET @strSQL =  ' &#xA;  USE MASTER&#xA;   ALTER DATABASE ' + @DatabaseName + '  SET MULTI_USER; ' &#xA;&#xA;EXEC  (@strSQL)&#xA;END" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="$Package::DatabaseName"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Restore\OverrideExisitngDB\Preserve Users and Permissions"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{8734e86c-ee16-4ef8-8312-f173a0adff09}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="Preserve Users and Permissions"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{A01A4DE8-E16A-4262-B057-E3DD855948B5}"
                  SQLTask:SqlStatementSource="DECLARE @cmd nvarchar(4000)&#xA;declare @Ndir nvarchar(3000)&#xA;declare @dbname nvarchar(255)&#xA;&#xA;set @dbname = (select DB_NAME())&#xA;&#x9;&#xA;&#x9;set @cmd = 'sqlcmd -s'+ @@SERVERNAME +' -d Talbot_Warehouse  -i &quot;E:\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DBAScripts\PreserveUsersPermissions.sql&quot; -o &quot;E:\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DBAScripts\'+@dbname+'_Perm.sql&quot;' &#xA;EXEC master.dbo.xp_cmdshell @cmd" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Restore\OverrideExisitngDB\Remove Prod Users from DB"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{94197f26-3459-4ce2-ad6e-82b52537fe06}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="Remove Prod Users from DB"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{A01A4DE8-E16A-4262-B057-E3DD855948B5}"
                  SQLTask:SqlStatementSource="&#xA;DECLARE @DatabaseName  VARCHAR(100) =?&#xA;DECLARE @strSQL VARCHAR(MAX)&#xA;&#xA;&#xA;IF EXISTS(SELECT name FROM sys.databases WHERE name = @DatabaseName)&#xA;&#xA;BEGIN&#xA;&#xA;   SET @strSQL =  ' &#xA;  USE MASTER&#xA;   ALTER DATABASE ' + @DatabaseName + '  SET RECOVERY SIMPLE WITH NO_WAIT; ' &#xA;&#xA;EXEC  (@strSQL)&#xA;END" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="$Package::DatabaseName"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Restore\OverrideExisitngDB\Restore DB"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{03c033d8-cc91-448f-8b1e-96f137e94c16}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="Restore DB"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:EventHandlers>
                <DTS:EventHandler
                  DTS:refId="Package\Restore\OverrideExisitngDB\Restore DB.EventHandlers[OnError]"
                  DTS:CreationName="OnError"
                  DTS:DTSID="{1fefc7b6-7d47-43e9-955e-1ef73e254cd2}"
                  DTS:EventID="578872440"
                  DTS:EventName="OnError"
                  DTS:LocaleID="-1">
                  <DTS:Variables>
                    <DTS:Variable
                      DTS:CreationName=""
                      DTS:Description="The propagate property of the event"
                      DTS:DTSID="{fc5756ed-b4f8-4f1f-a932-71802723f769}"
                      DTS:IncludeInDebugDump="6789"
                      DTS:Namespace="System"
                      DTS:ObjectName="Propagate">
                      <DTS:VariableValue
                        DTS:DataType="11">-1</DTS:VariableValue>
                    </DTS:Variable>
                  </DTS:Variables>
                  <DTS:Executables />
                </DTS:EventHandler>
              </DTS:EventHandlers>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{A01A4DE8-E16A-4262-B057-E3DD855948B5}"
                  SQLTask:SqlStatementSource="&#xA;DECLARE @strSQL VARCHAR(MAX) =?&#xA;&#xA;&#xA;EXEC   (@strSQL)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="$Package::Script"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Restore\OverrideExisitngDB\Restore Save users"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{a6e3bf0a-e1a5-4315-a5a1-90d4cc041df3}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="Restore Save users"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{A01A4DE8-E16A-4262-B057-E3DD855948B5}"
                  SQLTask:SqlStatementSource="&#x9;DECLARE @cmd nvarchar(4000)&#xA;&#x9;declare @Ndir nvarchar(3000)&#xA;&#x9;declare @dbname nvarchar(255)&#xA;&#xA;&#x9;set @dbname = (select DB_NAME())&#xA;&#xA;&#x9;&#xA;&#x9;set @cmd = 'sqlcmd -s'+ @@SERVERNAME +' -d Talbot_Warehouse -i &quot;E:\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DBAScripts\'+@dbname+'_Perm.sql&quot;' &#xA;&#xA;&#x9;EXEC master.dbo.xp_cmdshell @cmd" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Restore\OverrideExisitngDB\SET RecoveryMode-Simple"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{c052d7a8-8228-47e7-8bb9-0fc16c3e1e6a}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="SET RecoveryMode-Simple"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{A01A4DE8-E16A-4262-B057-E3DD855948B5}"
                  SQLTask:SqlStatementSource="&#xA;DECLARE @DatabaseName  VARCHAR(100) =?&#xA;DECLARE @strSQL VARCHAR(MAX)&#xA;&#xA;&#xA;IF EXISTS(SELECT name FROM sys.databases WHERE name = @DatabaseName)&#xA;&#xA;BEGIN&#xA;&#xA;   SET @strSQL =  ' &#xA;  USE MASTER&#xA;   ALTER DATABASE ' + @DatabaseName + '  SET RECOVERY SIMPLE WITH NO_WAIT; ' &#xA;&#xA;EXEC  (@strSQL)&#xA;END" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="$Package::DatabaseName"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Restore\OverrideExisitngDB\ShrinkLogs"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{a1a70889-1941-40bd-a66c-deb9e9c1af73}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="ShrinkLogs"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{A01A4DE8-E16A-4262-B057-E3DD855948B5}"
                  SQLTask:SqlStatementSource="Declare  @DeleteThem int&#xA;DECLARE @username VARCHAR(64)&#xA;&#xA;&#xA;--set this to not 0 to delete the users&#xA;set  @DeleteThem = 1&#xA;&#xA;&#xA;&#xA;  DECLARE c1 CURSOR FOR &#xA;    SELECT name   &#xA;    FROM sysusers&#xA;    WHERE name NOT IN('dbo','guest','INFORMATION_SCHEMA','sys','public','SQLSOXAudit')&#xA;      AND LEFT(name,3) &lt;&gt; 'db_'&#xA; And name not in (select name from sys.database_principals where type = 'R')&#xA;  OPEN c1&#xA;  FETCH next FROM c1 INTO @username&#xA;  WHILE @@fetch_status &lt;&gt; -1&#xA;   BEGIN&#xA;      PRINT 'Dropping ' + @username&#xA;      IF @DeleteThem &lt;&gt; 0&#xA;        EXEC dbo.sp_revokedbaccess @username&#xA;     FETCH next FROM c1 INTO @username&#xA;   END&#xA;CLOSE c1&#xA;DEALLOCATE c1&#xA;&#xA;&#xA;&#xA;&#xA;&#xA; &#xA;IF OBJECT_ID('tempdb..#tmp') IS NOT NULL&#xA;    DROP TABLE #tmp&#xA;CREATE TABLE #tmp&#xA;(&#xA;    [db] NVARCHAR(128),&#xA;    [name] NVARCHAR(128),&#xA;    [size] decimal (12,2),&#xA; [used] decimal (12,2),&#xA;) &#xA; &#xA;INSERT #tmp&#xA;SELECT db_name(), name ,size/128.0 - CAST(FILEPROPERTY(name, 'SpaceUsed') AS int)/128.0, CAST(FILEPROPERTY(name, 'SpaceUsed') AS int)/128.0 FROM sys.database_files where  [state] =0 and  type = '1'&#xA; &#xA;&#xA;&#xA;&#xA;DECLARE @name AS NVARCHAR(128)&#xA;DECLARE @db AS NVARCHAR(128)&#xA;DECLARE @sql AS VARCHAR (294)&#xA;&#xA;     SELECT @name = name FROM #tmp&#xA;     SELECT @db = db FROM #tmp&#xA;&#xA;       SET @sql = 'Use ['+ (select db from #tmp where db = @db and name = @name) + '] dbcc shrinkfile ([' + @name + '], 0 , TRUNCATEONLY)'&#xA;    &#xA;&#x9;--    print (@sql)&#xA;      EXEC ( @sql ) &#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="$Package::DatabaseName"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Restore\OverrideExisitngDB\SingleUser Mode"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{3a2028d6-8f09-4ef6-8cdb-8cf4985cf8ab}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="SingleUser Mode"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{A01A4DE8-E16A-4262-B057-E3DD855948B5}"
                  SQLTask:SqlStatementSource="&#xA;DECLARE @DatabaseName  VARCHAR(100) =?&#xA;DECLARE @strSQL VARCHAR(MAX)&#xA;&#xA;&#xA;IF EXISTS(SELECT name FROM sys.databases WHERE  user_access =0 and [state]=0 and name = @DatabaseName)&#xA;&#xA;BEGIN&#xA;&#xA;   SET @strSQL =  ' &#xA;  USE MASTER&#xA;   ALTER DATABASE ' + @DatabaseName + '  SET SINGLE_USER WITH ROLLBACK immediate;' &#xA;&#xA;EXEC  (@strSQL)&#xA;END" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="$Package::DatabaseName"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Restore\OverrideExisitngDB.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{E7A10E88-0F0F-4391-909F-58AD464C0BCC}"
              DTS:From="Package\Restore\OverrideExisitngDB\Preserve Users and Permissions"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Restore\OverrideExisitngDB\SingleUser Mode" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Restore\OverrideExisitngDB.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{8A271E03-CEA2-4C08-8F4D-7EC4050463BC}"
              DTS:From="Package\Restore\OverrideExisitngDB\SingleUser Mode"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\Restore\OverrideExisitngDB\Restore DB" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Restore\OverrideExisitngDB.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{40BFB428-FE2D-495E-9929-891E07ECCA79}"
              DTS:From="Package\Restore\OverrideExisitngDB\SET RecoveryMode-Simple"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\Restore\OverrideExisitngDB\ShrinkLogs" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Restore\OverrideExisitngDB.PrecedenceConstraints[Constraint 3]"
              DTS:CreationName=""
              DTS:DTSID="{8D9F0B1E-84DE-4520-99CD-0B6D938849BE}"
              DTS:From="Package\Restore\OverrideExisitngDB\ShrinkLogs"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 3"
              DTS:To="Package\Restore\OverrideExisitngDB\Remove Prod Users from DB"
              DTS:Value="2" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Restore\OverrideExisitngDB.PrecedenceConstraints[Constraint 4]"
              DTS:CreationName=""
              DTS:DTSID="{B390EADA-5C04-4E8A-9387-83C656AF103F}"
              DTS:From="Package\Restore\OverrideExisitngDB\Remove Prod Users from DB"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 4"
              DTS:To="Package\Restore\OverrideExisitngDB\Restore Save users" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Restore\OverrideExisitngDB.PrecedenceConstraints[Constraint 5]"
              DTS:CreationName=""
              DTS:DTSID="{A15CD248-CDB0-4456-AD18-6029C04FFC8D}"
              DTS:EvalOp="3"
              DTS:Expression="@[$Package::RecoveryMode] ==&quot;RECOVERY&quot;"
              DTS:From="Package\Restore\OverrideExisitngDB\Restore DB"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 5"
              DTS:To="Package\Restore\OverrideExisitngDB\MultiUser" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Restore\OverrideExisitngDB.PrecedenceConstraints[Constraint 6]"
              DTS:CreationName=""
              DTS:DTSID="{AC188F54-96CF-46F0-856A-B63D7FD1E6D2}"
              DTS:From="Package\Restore\OverrideExisitngDB\MultiUser"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 6"
              DTS:To="Package\Restore\OverrideExisitngDB\SET RecoveryMode-Simple" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Restore\OverrideExisitngDB.PrecedenceConstraints[Constraint 7]"
              DTS:CreationName=""
              DTS:DTSID="{C5AEB6F7-6F34-478C-98F5-4848C790F37F}"
              DTS:From="Package\Restore\OverrideExisitngDB\Restore Save users"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 7"
              DTS:To="Package\Restore\OverrideExisitngDB\Create Snapshot" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Restore\Remove From ADO"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{c687d640-07e6-434f-8032-81c8d9546c18}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:ForceExecutionResult="0"
          DTS:LocaleID="-1"
          DTS:MaxErrorCount="0"
          DTS:ObjectName="Remove From ADO">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Restore\Remove From ADO\ADD AWO"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteProcess.ExecuteProcess, Microsoft.SqlServer.ExecProcTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Execute Process Task"
              DTS:DTSID="{a2892474-d4ca-400e-a8d8-8df14213d7da}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteProcess.ExecuteProcess, Microsoft.SqlServer.ExecProcTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="ADD AWO"
              DTS:TaskContact="Execute Process Task;Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="3">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="Arguments">@[$Package::AddAWOPowershell]</DTS:PropertyExpression>
              <DTS:ObjectData>
                <ExecuteProcessData
                  Executable="C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe"
                  Arguments="powershell -noprofile -NonInteractive -nologo -file &quot;C:\Temp\PSscripts\AWO-ADDBtogroup.ps1&quot; -action &quot;add&quot;" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Restore\Remove From ADO\Create Snapshot"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Execute SQL Task"
              DTS:Disabled="True"
              DTS:DTSID="{06eb0160-8879-4d5f-8300-f609233a4ed2}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="Create Snapshot"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="3">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{A01A4DE8-E16A-4262-B057-E3DD855948B5}"
                  SQLTask:SqlStatementSource="&#xA;/*******************************************************&#xA;--------Snapshot file delete if exists&#xA;********************************************************/&#xA;--Set nocount on&#xA;&#xA;declare  @Delete_snapshotfile table&#xA;( &#xA;id int identity(1,1),&#xA;    [db] VARCHAR(128),&#xA;    [name] VARCHAR(128),&#xA;    [SnapFile_name] VARCHAR(500)&#xA;)&#xA;&#xA;&#xA;DECLARE @DatabasesName  VARCHAR(100) =  ?--  'Talbot_DW_Transform'&#xA;Declare @script varchar(3000)&#xA;declare @snapshot_filename varchar(3000)&#xA;declare @result varchar(3000)&#xA;DECLARE @FileExists int&#xA;&#xA;&#xA;insert into @Delete_snapshotfile&#xA;EXEC sp_MSforeachdb 'use [?] SELECT db_name(), name ,physical_name FROM sys.database_files where  [state] =0 and  type = ''0'''&#xA;&#xA;&#xA;update @Delete_snapshotfile set SnapFile_name = replace(replace(SnapFile_name,'.mdf','.ss'),'.ndf','.ss')&#xA;&#xA;&#xA;----check &#xA;--select * from @Delete_snapshotfile where db =@DatabaseName&#xA;&#xA;------Loop&#xA;&#xA;Use [Master]&#xA;&#xA;DECLARE SnapFile_name_Cursor CURSOR FOR  &#xA; SELECT &#xA;  SnapFile_name  &#xA; FROM &#xA;  @Delete_snapshotfile &#xA; WHERE&#xA;  db =@DatabasesName&#xA; &#xA;OPEN SnapFile_name_Cursor; &#xA;FETCH NEXT FROM SnapFile_name_Cursor into @snapshot_filename;  &#xA;WHILE @@FETCH_STATUS = 0  &#xA;   BEGIN &#xA;   --set @snapshot_filename ='F:\Microsoft SQL Server\Data\abc.ss'&#xA; set @script ='del &quot;' + @snapshot_filename + '&quot;'&#xA; &#xA; EXEC master..xp_FileExist @snapshot_filename, @FileExists out&#xA; IF @FileExists =1&#xA;  exec master..xp_cmdshell @script &#xA;  --print (@script)&#xA;&#xA;  FETCH NEXT FROM SnapFile_name_Cursor into @snapshot_filename&#xA;END&#xA;&#xA;CLOSE SnapFile_name_Cursor;  &#xA;DEALLOCATE SnapFile_name_Cursor;  &#xA;&#xA;-------------------------------------------------&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;------------------------------------------------Snapshot Creation&#xA;&#xA;USE Master&#xA;&#xA;DECLARE @dbname varchar(255)&#xA; SET @dbname = ?  -- 'RI' --&lt;&lt;&lt;&lt;&lt;&lt; SET SOURCE DATABASE NAME HERE &gt;&gt;&gt;&gt;&gt;&gt;&#xA;&#xA;SET QUOTED_IDENTIFIER ON&#xA; SET NOCOUNT ON&#xA;  DECLARE @SnapshotSuffix varchar(50)&#xA; DECLARE @sql table (id int identity(1,1), data varchar(max))&#xA; DECLARE @FileIDExceptionList table (id int)&#xA;&#xA;&#xA; SET @SnapshotSuffix = '_snapshot'&#xA;  INSERT INTO @FileIDExceptionList (id) values (2) -- default ldf id = 2 &lt;&lt;&lt;&lt;&lt;&lt; Add additional File Exceptions here &gt;&gt;&gt;&gt;&gt;&gt;&#xA;&#xA; IF (SELECT (1) FROM sysfiles WHERE filename like '%ldf%' and fileid not in (SELECT id FROM @FileIDExceptionList)) is not null&#xA;  RAISERROR ('you have non default MDF or LDF file extensions that will be excluded FROM this scipt, please add them to the fileID exception list.', 16,1)&#xA;&#xA; IF (SELECT name FROM sys.databases WHERE name = @dbname) IS NULL&#xA;  RAISERROR ('Cannot find the database specified. please check that it exists and try again', 16,1)&#xA;  ELSE&#xA;  BEGIN&#xA;  INSERT INTO @sql values ('use master'),('CREATE DATABASE [' + @dbname + @SnapshotSuffix + '] ON')&#xA; INSERT INTO @sql&#xA;  SELECT '( NAME = [' + name +'] , FILENAME = ''' + REPLACE(physical_name, '.ndf', '.ss') + '''),' FROM sys.master_files&#xA;  WHERE database_id = DB_ID(@dbname) AND physical_name like '%.ndf%'&#xA; UNION&#xA;  SELECT '( NAME = [' + name +'] , FILENAME = ''' + REPLACE(physical_name, '.mdf', '.ss') + '''),' FROM sys.master_files&#xA;  WHERE database_id = DB_ID(@dbname) AND physical_name like '%.mdf%'&#xA; INSERT INTO @sql values ('AS SNAPSHOT OF [' + @dbname + '];'),('')&#xA;&#xA; UPDATE @sql&#xA;  SET data = REPLACE(data,'),',')') WHERE id in (SELECT MAX(id) -2 FROM @sql)&#xA;  --SELECT data AS '– Generated Script -- 'FROM @sql&#xA;  END&#xA;&#xA;&#xA; declare @sqlscript varchar(max)&#xA;&#xA; select @sqlscript = &#xA; &#xA; (select&#xA;   distinct  &#xA;    stuff((&#xA;        select ' ' + u.data&#xA;        from @sql u&#xA;        where u.id = id&#xA;        order by u.id&#xA;        --for xml path('')    ),1,1,'')&#xA;  FOR XML PATH(''), TYPE).value(N'(./text())[1]', N'varchar(max)'), 1, 1, '')&#xA;   as userlist&#xA;from @sql&#xA;group by data&#xA;)&#xA; &#xA; from @sql&#xA;&#xA;&#xA;&#xA;print (@sqlscript)&#xA;exec (@sqlscript)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="$Package::DatabaseName"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="1"
                    SQLTask:DtsVariableName="$Package::DatabaseName"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Restore\Remove From ADO\Drop Databsae If Exist"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{ca53a32d-75ea-4f7a-aa4e-b3f1be606b43}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="Drop Databsae If Exist"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="3">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{A01A4DE8-E16A-4262-B057-E3DD855948B5}"
                  SQLTask:SqlStatementSource="&#xA;DECLARE @DatabaseName  VARCHAR(100) =?&#xA;DECLARE @strSQL VARCHAR(MAX)&#xA;&#xA;&#xA;&#xA;IF EXISTS(SELECT name FROM sys.databases WHERE name = @DatabaseName)&#xA;&#xA;BEGIN&#xA;&#xA;   SET @strSQL =  ' &#xA;  USE MASTER&#xA;   ALTER DATABASE ' + @DatabaseName + '  SET SINGLE_USER WITH ROLLBACK IMMEDIATE; ' +&#xA;    'DROP DATABASE ' + @DatabaseName + ';'&#xA;&#xA;&#xA;EXEC  (@strSQL)&#xA;END" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="$Package::DatabaseName"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Restore\Remove From ADO\Move Logs"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{d3eb26c0-615c-4e7c-8452-54d9d39725e6}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:ForceExecutionResult="0"
              DTS:LocaleID="-1"
              DTS:MaxErrorCount="0"
              DTS:ObjectName="Move Logs"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="3">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{A01A4DE8-E16A-4262-B057-E3DD855948B5}"
                  SQLTask:SqlStatementSource="SET NOCOUNT ON&#xA;&#xA;--VAR&#xA;DECLARE @cmd nvarchar(4000)&#xA;Declare @DBName varchar(50)&#xA;Declare @OldLoc varchar(1000)&#xA;Declare @LogName varchar(1000)&#xA;Declare @OldLoc_log varchar(1000)&#xA;Declare @LogName_log varchar(1000)&#xA;Declare @NewLoc varchar(1000)&#xA;Declare @NewLocLogs varchar(1000)&#xA;declare @FileName varchar(255)&#xA;declare @FileName_log varchar(255)&#xA;declare @Error_flag int    &#xA;declare @tail int &#xA;&#xA;&#xA;       --Set the following vlaues DATA QUALITY_20140701&#xA;       set @DBName =?&#xA;       set @NewLoc = 'F:\Microsoft SQL Server\Data\'&#xA;       set @NewLocLogs = 'G:\Microsoft SQL Server\Logs\'&#xA;&#xA;--&#xA;--     set @DBName = 'ith_test'&#xA;--     set @NewLoc = 'h:\MSSQLSERVER\MSSQL$DAWH\Data\'&#xA;&#xA;--********************** Start of Script **************************&#xA;&#xA;       &#xA;--create a temp table to hold list of DBs&#xA;       create TABLE #DBInfo (&#xA;              ServerName VARCHAR(100),  &#xA;              DatabaseName VARCHAR(100),  &#xA;              FileSizeMB INT,  &#xA;              LogicalFileName sysname,  &#xA;              PhysicalFileName NVARCHAR(520),  &#xA;              Status sysname,  &#xA;              Updateability sysname,  &#xA;              RecoveryMode sysname,  &#xA;              FreeSpaceMB INT,  &#xA;              FreeSpacePct VARCHAR(7),  &#xA;              FreeSpacePages INT,  &#xA;              PollDate datetime)  &#xA;&#xA;&#xA;-- Query to find the required info from each DB on the server.&#xA;       select @cmd = 'Use [' + '?' + '] &#xA;                                  SELECT  @@servername as ServerName,  &#xA;                                  ' + '''' + '?' + '''' + ' AS DatabaseName,  &#xA;                                  CAST(sysfiles.size/128.0 AS int) AS FileSize,  &#xA;                                  sysfiles.name AS LogicalFileName, sysfiles.filename AS PhysicalFileName,  &#xA;                                  CONVERT(sysname,DatabasePropertyEx(''?'',''Status'')) AS Status,  &#xA;                                  CONVERT(sysname,DatabasePropertyEx(''?'',''Updateability'')) AS Updateability,  &#xA;                                  CONVERT(sysname,DatabasePropertyEx(''?'',''Recovery'')) AS RecoveryMode,  &#xA;                                  CAST(sysfiles.size/128.0 - CAST(FILEPROPERTY(sysfiles.name, ' + '''' +  &#xA;                                  'SpaceUsed' + '''' + ' ) AS int)/128.0 AS int) AS FreeSpaceMB,  &#xA;                                  CAST(100 * (CAST (((sysfiles.size/128.0 -CAST(FILEPROPERTY(sysfiles.name,  &#xA;                                  ' + '''' + 'SpaceUsed' + '''' + ' ) AS int)/128.0)/(sysfiles.size/128.0))  &#xA;                                  AS decimal(4,2))) AS varchar(8)) + ' + '''' + '%' + '''' + ' AS FreeSpacePct,  &#xA;                                  GETDATE() as PollDate FROM dbo.sysfiles'  &#xA;       INSERT INTO #DBInfo (&#xA;                           ServerName,  &#xA;                           DatabaseName,  &#xA;                           FileSizeMB,  &#xA;                           LogicalFileName,  &#xA;                           PhysicalFileName,  &#xA;                           Status,  &#xA;                           Updateability,  &#xA;                           RecoveryMode,  &#xA;                           FreeSpaceMB,  &#xA;                           FreeSpacePct,  &#xA;                           PollDate)  &#xA;       EXEC sp_MSForEachDB @cmd  -- Use the sp_MSForEachDB to run on each DB on the SERVER&#xA;       &#xA;       set @Error_flag = 0&#xA;       set @OldLoc = (select PhysicalFileName  from #DBInfo where DatabaseName = @DBName and PhysicalFileName like ('%.mdf'))&#xA;       set @LogName = (select LogicalFileName  from #DBInfo where DatabaseName = @DBName and PhysicalFileName like ('%.mdf')) &#xA;&#xA;       set @OldLoc_log = (select PhysicalFileName  from #DBInfo where DatabaseName = @DBName and PhysicalFileName like ('%.ldf'))&#xA;       set @LogName_log = (select LogicalFileName  from #DBInfo where DatabaseName = @DBName and PhysicalFileName like ('%.ldf'))&#xA;&#xA;&#xA;&#xA;&#xA;       set @tail = (&#xA;              select charindex('\',LTRIM(reverse(@OldLoc)) )&#xA;       )&#xA;       &#xA;       set @FileName = (&#xA;       select substring(reverse(@OldLoc),1,@tail-1))&#xA;       set @Filename = reverse(@FileName)&#xA;&#xA;       set @NewLoc = @NewLoc + @FileName&#xA;       print 'File to Be Move: '+@OldLoc&#xA;       print 'New File Location is :'+ @NewLoc&#xA;       print 'Logical Name :'+@LogName&#xA;       print ''&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;       set @tail = (&#xA;              select charindex('\',LTRIM(reverse(@OldLoc_log)) )&#xA;       )&#xA;       &#xA;       set @FileName_log = (&#xA;       select substring(reverse(@OldLoc_log),1,@tail-1))&#xA;       set @FileName_log = reverse(@FileName_log)&#xA;&#xA;       set @NewLocLogs  = @NewLocLogs + @FileName_log&#xA;       print 'File to Be Move: '+@OldLoc_log&#xA;       print 'New File Location is :'+ @NewLocLogs&#xA;       print 'Logical Name :'+@LogName_log&#xA;       print ''&#xA;&#xA;&#xA;&#xA;&#xA;-- Step1: put the database offline&#xA;    set @cmd = 'ALTER DATABASE ['+ @DBName + '] SET OFFLINE;'&#xA;       exec (@cmd)--Set the DB to be offline&#xA;       print @CMD&#xA;       print ''&#xA;&#xA;--Copy file&#xA;       select @cmd = 'copy &quot;'+ @OldLoc +'&quot;  &quot;'+ @NewLoc +'&quot;'&#xA;       EXEC master.dbo.xp_cmdshell @cmd&#xA;       print @CMD&#xA;       print ''&#xA;&#xA;&#xA;&#xA;       select @cmd = 'copy &quot;'+ @OldLoc_log +'&quot;  &quot;'+ @NewLocLogs +'&quot;'&#xA;       EXEC master.dbo.xp_cmdshell @cmd&#xA;       print @CMD&#xA;       print ''&#xA;&#xA;--Change the DB to point to the new file&#xA;       set @cmd = 'ALTER DATABASE ['+@DBname+'] MODIFY FILE (NAME = ['+@LogName+'], FILENAME = '''+@NewLoc+''');' &#xA;       print @CMD&#xA;       print ''&#xA;       exec (@cmd)&#xA;&#xA;       set @cmd = 'ALTER DATABASE ['+@DBname+'] MODIFY FILE (NAME = ['+@LogName_log+'], FILENAME = '''+@NewLocLogs+''');' &#xA;       print @CMD&#xA;       print ''&#xA;       exec (@cmd)&#xA;&#xA;--Rename the DB file &#xA;       select @cmd = 'rename &quot;'+@oldLoc+'&quot; &quot;'+@FileName+'_Del2&quot;'&#xA;       EXEC master.dbo.xp_cmdshell @cmd     &#xA;       print @CMD&#xA;       print ''&#xA;&#xA;&#xA;       select @cmd = 'rename &quot;'+@OldLoc_log+'&quot; &quot;'+@FileName_log+'_Del2&quot;'&#xA;       EXEC master.dbo.xp_cmdshell @cmd     &#xA;       print @CMD&#xA;       print ''&#xA;&#xA;--Bring the database online&#xA;    set @cmd = 'ALTER DATABASE ['+@DBName+'] SET ONLINE'&#xA;       exec (@cmd)&#xA;       print @CMD&#xA;       print ''&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;--clean up temptable&#xA;drop table #DBInfo" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="$Package::DatabaseName"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Restore\Remove From ADO\Remove AWO"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteProcess.ExecuteProcess, Microsoft.SqlServer.ExecProcTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Execute Process Task"
              DTS:DTSID="{b03df918-3be6-47d0-a2d3-65ac32d379f2}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteProcess.ExecuteProcess, Microsoft.SqlServer.ExecProcTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="Remove AWO"
              DTS:TaskContact="Execute Process Task;Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="3">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="Arguments">@[$Package::RemoveAWOlPowershell]</DTS:PropertyExpression>
              <DTS:ObjectData>
                <ExecuteProcessData
                  Executable="C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe"
                  Arguments="powershell -noprofile -NonInteractive -nologo -file &quot;C:\Temp\PSscripts\AWO-ADDBtogroup.ps1&quot; -action &quot;del&quot;" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Restore\Remove From ADO\Remove Prod Users from DB"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{be2baa69-7ae1-4aa6-932f-9e337a3fb66a}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="Remove Prod Users from DB"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="3">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{A01A4DE8-E16A-4262-B057-E3DD855948B5}"
                  SQLTask:SqlStatementSource="&#xA;DECLARE @DatabaseName  VARCHAR(100) =?&#xA;DECLARE @strSQL VARCHAR(MAX)&#xA;&#xA;&#xA;IF EXISTS(SELECT name FROM sys.databases WHERE name = @DatabaseName)&#xA;&#xA;BEGIN&#xA;&#xA;   SET @strSQL =  ' &#xA;  USE MASTER&#xA;   ALTER DATABASE ' + @DatabaseName + '  SET RECOVERY SIMPLE WITH NO_WAIT; ' &#xA;&#xA;EXEC  (@strSQL)&#xA;END" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="$Package::DatabaseName"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Restore\Remove From ADO\Restore DB"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{50cc44e7-b4d7-4ff2-8f1d-e84f39a497b7}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="Restore DB"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="3">
              <DTS:Variables />
              <DTS:EventHandlers>
                <DTS:EventHandler
                  DTS:refId="Package\Restore\Remove From ADO\Restore DB.EventHandlers[OnError]"
                  DTS:CreationName="OnError"
                  DTS:DTSID="{7f79b987-cb72-4e26-ba11-4e9df2a2c81e}"
                  DTS:EventID="578872440"
                  DTS:EventName="OnError"
                  DTS:LocaleID="-1">
                  <DTS:Variables>
                    <DTS:Variable
                      DTS:CreationName=""
                      DTS:Description="The propagate property of the event"
                      DTS:DTSID="{51f8a2b9-34f1-40db-ae32-4ccd7d0ad6de}"
                      DTS:IncludeInDebugDump="6789"
                      DTS:Namespace="System"
                      DTS:ObjectName="Propagate">
                      <DTS:VariableValue
                        DTS:DataType="11">-1</DTS:VariableValue>
                    </DTS:Variable>
                  </DTS:Variables>
                  <DTS:Executables />
                </DTS:EventHandler>
              </DTS:EventHandlers>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{A01A4DE8-E16A-4262-B057-E3DD855948B5}"
                  SQLTask:SqlStatementSource="&#xA;DECLARE @strSQL VARCHAR(MAX) =?&#xA;&#xA;&#xA;EXEC   (@strSQL)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="$Package::Script"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Restore\Remove From ADO\SET TO FULL Mode"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{2d5df5f5-4a4a-412d-a43d-a0f76f7e9ad5}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="SET TO FULL Mode"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="3">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{A01A4DE8-E16A-4262-B057-E3DD855948B5}"
                  SQLTask:SqlStatementSource="&#xA;DECLARE @DatabaseName  VARCHAR(100) =?&#xA;DECLARE @strSQL VARCHAR(MAX)&#xA;&#xA;&#xA;IF EXISTS(SELECT name FROM sys.databases WHERE name = @DatabaseName)&#xA;&#xA;BEGIN&#xA;&#xA;   SET @strSQL =  ' &#xA;  USE MASTER&#xA;   ALTER DATABASE ' + @DatabaseName + '   SET RECOVERY FULL WITH NO_WAIT; ' &#xA;&#xA;EXEC  (@strSQL)&#xA;END" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="$Package::DatabaseName"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Restore\Remove From ADO\SET TO SIMPLE Mode"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{5adbc2c2-f2c1-4c2f-8b56-1069d19dc9a4}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="SET TO SIMPLE Mode"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="3">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{A01A4DE8-E16A-4262-B057-E3DD855948B5}"
                  SQLTask:SqlStatementSource="&#xA;DECLARE @DatabaseName  VARCHAR(100) =?&#xA;DECLARE @strSQL VARCHAR(MAX)&#xA;&#xA;&#xA;IF EXISTS(SELECT name FROM sys.databases WHERE name = @DatabaseName)&#xA;&#xA;BEGIN&#xA;&#xA;   SET @strSQL =  ' &#xA;  USE MASTER&#xA;   ALTER DATABASE ' + @DatabaseName + '  SET RECOVERY SIMPLE WITH NO_WAIT; ' &#xA;&#xA;EXEC  (@strSQL)&#xA;END" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="$Package::DatabaseName"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Restore\Remove From ADO\ShrinkDB"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{6977b9ae-fe39-4cac-af32-7cf239c442fe}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:ForceExecutionResult="0"
              DTS:LocaleID="-1"
              DTS:MaxErrorCount="0"
              DTS:ObjectName="ShrinkDB"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="3">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{A01A4DE8-E16A-4262-B057-E3DD855948B5}"
                  SQLTask:SqlStatementSource="DBCC UPDATEUSAGE(0)&#xA; &#xA;IF OBJECT_ID('tempdb..#tmp') IS NOT NULL&#xA;    DROP TABLE #tmp&#xA;CREATE TABLE #tmp&#xA;(&#xA;    [db] NVARCHAR(128),&#xA;    [name] NVARCHAR(128),&#xA;    [size] decimal (12,2),&#xA; [used] decimal (12,2),&#xA;) &#xA; &#xA;INSERT #tmp&#xA;EXEC sp_MSforeachdb 'use [?] SELECT db_name(), name ,size/128.0 - CAST(FILEPROPERTY(name, ''SpaceUsed'') AS int)/128.0, CAST(FILEPROPERTY(name, ''SpaceUsed'') AS int)/128.0 FROM sys.database_files where  [state] =0 and  type = ''1'''&#xA; &#xA;DECLARE @name AS NVARCHAR(128)&#xA;DECLARE @db AS NVARCHAR(128)&#xA;DECLARE @sql AS VARCHAR (294)&#xA;WHILE @@ROWCOUNT &gt; 0&#xA;BEGIN&#xA;    SET ROWCOUNT 1&#xA;    SELECT @name = name FROM #tmp&#xA;    SELECT @db = db FROM #tmp&#xA;/*&#xA; * check for log files that have 20 time &#xA; * their used space available. If the check &#xA; * returns true it will shrink the file to&#xA; * 20 time the space used.&#xA; *&#xA; * These values can be changed if necessary&#xA; */&#xA;    IF&#xA;    (SELECT (used*1) FROM #tmp WHERE db = @db and name = @name) &lt; (SELECT size FROM #tmp WHERE db = @db and name = @name)&#xA;  BEGIN&#xA;      /*&#xA;       * Shrink to 20x used space&#xA;       */&#xA;      SET @sql = 'Use ['+ (select db from #tmp where db = @db and name = @name) + '] dbcc shrinkfile ([' + @name + '],' + cast(cast(round((select (used*20) from #tmp where [db] = @db and [name] = @name),0) as int) as varchar(12)) + ')'&#xA;   print @sql&#xA;      EXEC ( @sql )&#xA; &#xA;      /*&#xA;       * Release unused space&#xA;       */&#xA;      SET @sql = 'Use ['+ (select db from #tmp where db = @db and name = @name) + '] dbcc shrinkfile ([' + @name + '], 0 , TRUNCATEONLY)'&#xA;     print @sql&#xA;      EXEC ( @sql )  &#xA;  END&#xA;    DELETE FROM #tmp WHERE name = @name&#xA;END&#xA; &#xA;SET ROWCOUNT 0&#xA;SET NOCOUNT off&#xA;DROP TABLE #tmp" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Restore\Remove From ADO.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{333c8e49-6e9d-4481-9e83-eaaa3dc1abed}"
              DTS:From="Package\Restore\Remove From ADO\Remove AWO"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Restore\Remove From ADO\Drop Databsae If Exist" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Restore\Remove From ADO.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{FE96CE46-2DA9-4886-9CF0-6804FBDFD5C1}"
              DTS:From="Package\Restore\Remove From ADO\Drop Databsae If Exist"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\Restore\Remove From ADO\Restore DB" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Restore\Remove From ADO.PrecedenceConstraints[Constraint 1 1]"
              DTS:CreationName=""
              DTS:DTSID="{af710655-06a0-44f7-a0de-e3b4ad3b5378}"
              DTS:From="Package\Restore\Remove From ADO\ShrinkDB"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1 1"
              DTS:To="Package\Restore\Remove From ADO\Move Logs"
              DTS:Value="2" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Restore\Remove From ADO.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{f689dd31-c750-466d-b787-691350440405}"
              DTS:From="Package\Restore\Remove From ADO\SET TO SIMPLE Mode"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\Restore\Remove From ADO\ShrinkDB" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Restore\Remove From ADO.PrecedenceConstraints[Constraint 2 1]"
              DTS:CreationName=""
              DTS:DTSID="{d763587b-2c9d-43e7-a3a0-4665a7b32a9b}"
              DTS:From="Package\Restore\Remove From ADO\Move Logs"
              DTS:ObjectName="Constraint 2 1"
              DTS:To="Package\Restore\Remove From ADO\SET TO FULL Mode"
              DTS:Value="2" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Restore\Remove From ADO.PrecedenceConstraints[Constraint 3]"
              DTS:CreationName=""
              DTS:DTSID="{4f5bcc7f-0f0e-4744-8fe8-c1d95b30e84c}"
              DTS:From="Package\Restore\Remove From ADO\SET TO FULL Mode"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 3"
              DTS:To="Package\Restore\Remove From ADO\ADD AWO" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Restore\Remove From ADO.PrecedenceConstraints[Constraint 4]"
              DTS:CreationName=""
              DTS:DTSID="{3539D69E-C8D0-4BAB-A9DE-01ADA332AE97}"
              DTS:EvalOp="3"
              DTS:Expression="@[$Package::RecoveryMode] ==&quot;RECOVERY&quot;"
              DTS:From="Package\Restore\Remove From ADO\Restore DB"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 4"
              DTS:To="Package\Restore\Remove From ADO\SET TO SIMPLE Mode" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Restore\Remove From ADO.PrecedenceConstraints[Constraint 5]"
              DTS:CreationName=""
              DTS:DTSID="{E31F772F-3A79-42E4-8B09-8A29B8691BAB}"
              DTS:From="Package\Restore\Remove From ADO\ADD AWO"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 5"
              DTS:To="Package\Restore\Remove From ADO\Remove Prod Users from DB" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Restore\Remove From ADO.PrecedenceConstraints[Constraint 6]"
              DTS:CreationName=""
              DTS:DTSID="{A7E1E79A-9B62-4BA0-B535-5E831FF43165}"
              DTS:From="Package\Restore\Remove From ADO\Remove Prod Users from DB"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 6"
              DTS:To="Package\Restore\Remove From ADO\Create Snapshot" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Restore\Script Task"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Script Task"
          DTS:Disabled="True"
          DTS:DTSID="{9c1f6c47-2781-4e84-b052-8fbe06ed3516}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Script Task"
          DTS:ThreadHint="7">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_06e93324ac1146108c71ff73ad2ce2ad"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::DynamicConnection,$Package::OverrideExistingDB,$Package::Script">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ST_06e93324ac1146108c71ff73ad2ce2ad.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{77d59a8b-7a1c-4494-a09c-8596b752e7cf}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_7f28eeae1983421fad1db62ebb482474</RootNamespace><AssemblyName>ST_06e93324ac1146108c71ff73ad2ce2ad</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7f28eeae1983421fad1db62ebb482474.Properties.Settings.get_Default():ST_7f28eeae1983421fad1db62ebb482474.Properties.Sett" +
    "ings")]

namespace ST_7f28eeae1983421fad1db62ebb482474.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_7f28eeae1983421fad1db62ebb482474
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            //System::ErrorDescription

            //DynamicConnection

            //Dts.Variables["User::strErrorDes"].Value = Dts.Variables["User::strErrorDes"].Value.ToString() + Dts.Variables["System::ErrorDescription"].Value.ToString();
            //User::DynamicConnection,$Package::Script
            MessageBox.Show(Dts.Variables["$Package::OverrideExistingDB"].Value.ToString());
            //MessageBox.Show(Dts.Variables["$Package::Script"].Value.ToString());
            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_7f28eeae1983421fad1db62ebb482474</msb:CodeName>
		<msb:DisplayName>ST_7f28eeae1983421fad1db62ebb482474</msb:DisplayName>
		<msb:ProjectId>{F7AEC810-992B-43CC-BA95-5FB6F6A35EA5}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_06e93324ac1146108c71ff73ad2ce2ad.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_7f28eeae1983421fad1db62ebb482474")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_7f28eeae1983421fad1db62ebb482474")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7f28eeae1983421fad1db62ebb482474.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7f28eeae1983421fad1db62ebb482474.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7f28eeae1983421fad1db62ebb482474.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_7f28eeae1983421fad1db62ebb482474.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_7f28eeae1983421fad1db62ebb482474.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_06e93324ac1146108c71ff73ad2ce2ad.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAE3AhVoAAAAAAAAAAOAAAiELAQsAABAAAAAIAAAAAAAAfi4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAACguAABTAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAhA4AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABg
LgAAAAAAAEgAAAACAAUAsCEAAHgMAAABAAAAAAAAAPggAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqygIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKbxoAAAooGwAACiYCKBYA
AAoWbxwAAAoqHgIoHQAACioAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNv
dXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQ
dWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJl
c291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMx
OQAAAAAFAGwAAADkAwAAI34AAFAEAAAEBgAAI1N0cmluZ3MAAAAAVAoAALAAAAAjVVMABAsAABAA
AAAjR1VJRAAAABQLAABkAQAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJAwAAAPolMwAWAAABAAAAHwAA
AAUAAAAGAAAACQAAAAEAAAAdAAAAAgAAAA8AAAABAAAAAgAAAAMAAAAEAAAAAQAAAAUAAAABAAAA
AQAAAAAACgABAAAAAAAGAMEAugAKAN0AyAAOAD0BFAEGAFkBugAGAG8BXgEGAKABiwEGAFcCPQIG
AIICcAIGAJkCcAIGALYCcAIGANUCcAIGAO4CcAIGAAcDcAIGACIDcAIGAD0DcAIGAFYDcAIGAI8D
bwMGAK8DbwMGAAQE8QMGACEEugAGACYEugAGAEoEcAIKAHYEYAQKAI8EYAQGAKQEbwMOAMYEFAEO
AOgEFAESAEEFIQUSAFkFIQUWAJMFfgUWAJ4FfgUAAAAAAQAAAAAAAQABAAAAEAAyADwABQABAAEA
AAEQAGsAPAAJAAMABQABABAAdAB/AA0ABAAIAAMBAACjAAAAEQAEAAoAEQB/ARMAEQCsARcAEQD2
ATkABgYfAkcAVoAnAkoAVoAvAkoAUCAAAAAAgxi8ARsAAQBYIAAAAACTCMIBHwABAJEgAAAAAJMI
1gEkAAEAmCAAAAAAkwjiASkAAQCgIAAAAACWCAYCPQACALMgAAAAAIYYvAEbAAIApyAAAAAAkRi/
BIkAAgC7IAAAAACGABoCGwACAO4gAAAAAIYYvAEbAAIAAAABADcCOQC8AVgAQQC8AVgASQC8AVgA
UQC8AVgAWQC8AVgAYQC8AVgAaQC8AVgAcQC8AVgAeQC8AVgAgQC8AVgAiQC8AV0AkQC8ARsAmQC8
ARsACQC8ARsAoQA4BGIAoQBTBGkAKQC8AW4AuQC8AXoAyQC8ARsAEQC8ARsA0QC8ARsAGQD6BI0A
2QBLBZIA4QBiBZcA6QBrBZ0ACQB1BaEA8QCrBaUA2QCwBV0AGQC8ARsACAAUAE4ACAAYAFMAKQCT
AIAALgAbABwBLgAjABwBLgBjAEIBLgALAKsALgATAPMALgAzAPMALgArABwBLgA7ACIBLgBDABwB
LgBbADkBQwBrAFMASQCTAIAAYQCbAFMAgwCrAFMAdQACAAEAAwADAAAAbwEvAAAA7gE0AAAAEgJC
AAIAAgADAAIAAwAFAAEABAAFAAIABQAHAASAAAABAAAA3BlmeQAAAAAAAM0DAAAEAAAAAAAAAAAA
AAABALEAAAAAAAQAAAAAAAAAAAAAAAEAugAAAAAACwAAAAAAAAAAAAAACgD1AAAAAAALAAAAAAAA
AAAAAAAKAAIFAAAAAAQAAAAAAAAAAAAAAAEAfgUAAAAAAAAAAAEAAAC/BQAABQAEAAAAAAAAPE1v
ZHVsZT4AU1RfMDZlOTMzMjRhYzExNDYxMDhjNzFmZjczYWQyY2UyYWQuZGxsAFJlc291cmNlcwBT
VF83ZjI4ZWVhZTE5ODM0MjFmYWQxZGI2MmViYjQ4MjQ3NC5Qcm9wZXJ0aWVzAFNldHRpbmdzAFNj
cmlwdE1haW4AU1RfN2YyOGVlYWUxOTgzNDIxZmFkMWRiNjJlYmI0ODI0NzQAU2NyaXB0UmVzdWx0
cwBtc2NvcmxpYgBTeXN0ZW0AT2JqZWN0AFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0aW9u
U2V0dGluZ3NCYXNlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3Fs
U2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBF
bnVtAFN5c3RlbS5SZXNvdXJjZXMAUmVzb3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5H
bG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJlc291cmNlQ3VsdHVyZQAuY3RvcgBnZXRfUmVzb3Vy
Y2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAEN1bHR1cmUAZGVmYXVsdEluc3RhbmNl
AGdldF9EZWZhdWx0AERlZmF1bHQATWFpbgB2YWx1ZV9fAFN1Y2Nlc3MARmFpbHVyZQB2YWx1ZQBT
eXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0u
UmVmbGVjdGlvbgBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRy
aWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJp
YnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUA
QXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2Vt
Ymx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBp
bGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUA
U1RfMDZlOTMzMjRhYzExNDYxMDhjNzFmZjczYWQyY2UyYWQAU3lzdGVtLkRpYWdub3N0aWNzAERl
YnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUAVHlwZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBl
RnJvbUhhbmRsZQBBc3NlbWJseQBnZXRfQXNzZW1ibHkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAEVk
aXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVy
YXRlZEF0dHJpYnV0ZQAuY2N0b3IAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAFNj
cmlwdE9iamVjdE1vZGVsAGdldF9EdHMATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVmFyaWFibGVzAGdldF9WYXJpYWJsZXMAVmFy
aWFibGUAZ2V0X0l0ZW0AZ2V0X1ZhbHVlAFRvU3RyaW5nAFN5c3RlbS5XaW5kb3dzLkZvcm1zAE1l
c3NhZ2VCb3gARGlhbG9nUmVzdWx0AFNob3cAc2V0X1Rhc2tSZXN1bHQAU1RfN2YyOGVlYWUxOTgz
NDIxZmFkMWRiNjJlYmI0ODI0NzQuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAAAAAHFT
AFQAXwA3AGYAMgA4AGUAZQBhAGUAMQA5ADgAMwA0ADIAMQBmAGEAZAAxAGQAYgA2ADIAZQBiAGIA
NAA4ADIANAA3ADQALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAADkk
AFAAYQBjAGsAYQBnAGUAOgA6AE8AdgBlAHIAcgBpAGQAZQBFAHgAaQBzAHQAaQBuAGcARABCAAAA
AABVHr14iFa2SqzagORvkkSUAAi3elxWGTTgiQiJhF3NgIDMkQMGEhUDBhIZAyAAAQQAABIVBAAA
EhkFAAEBEhkECAASFQQIABIZAwYSDAQAABIMBAgAEgwCBggDBhEUBAAAAAAEAQAAAAQgAQEOBCAB
AQgGAAESURFVBCAAElkGIAIBDhJZBAcBEhUFIAEBEWEIAQACAAAAAAADAAABBCAAEm0EIAAScQUg
ARJ1HAMgABwDIAAOBQABEX0ORwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFt
ZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0KAEAI1NUXzdmMjhlZWFlMTk4MzQyMWZh
ZDFkYjYyZWJiNDgyNDc0AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTgAAAgBAAgAAAAAAB4B
AAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEAAABQLgAAAAAAAAAAAABuLgAAACAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAYC4AAAAAAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwA
AAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQBmedwZAAABAGZ53Bk/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAA
MAAwADAANABiADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBU
AF8ANwBmADIAOABlAGUAYQBlADEAOQA4ADMANAAyADEAZgBhAGQAMQBkAGIANgAyAGUAYgBiADQA
OAAyADQANwA0AAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYANgAy
ADAALgAzADEAMAA3ADgAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8A
MAA2AGUAOQAzADMAMgA0AGEAYwAxADEANAA2ADEAMAA4AGMANwAxAGYAZgA3ADMAYQBkADIAYwBl
ADIAYQBkAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADgAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBp
AGwAZQBuAGEAbQBlAAAAUwBUAF8AMAA2AGUAOQAzADMAMgA0AGEAYwAxADEANAA2ADEAMAA4AGMA
NwAxAGYAZgA3ADMAYQBkADIAYwBlADIAYQBkAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0
AE4AYQBtAGUAAAAAAFMAVABfADcAZgAyADgAZQBlAGEAZQAxADkAOAAzADQAMgAxAGYAYQBkADEA
ZABiADYAMgBlAGIAYgA0ADgAMgA0ADcANAAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4ANgA2ADIAMAAuADMAMQAwADcAOAAAAAAASAAPAAEAQQBzAHMAZQBtAGIA
bAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgA2ADIAMAAuADMAMQAwADcAOAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAACAPgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Restore\ShrinkDB"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:Disabled="True"
          DTS:DTSID="{d54d7381-ca6b-4048-a6ab-0995c0c66266}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:ForceExecutionResult="0"
          DTS:LocaleID="-1"
          DTS:MaxErrorCount="0"
          DTS:ObjectName="ShrinkDB"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="8">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{A01A4DE8-E16A-4262-B057-E3DD855948B5}"
              SQLTask:SqlStatementSource="DBCC UPDATEUSAGE(0)&#xA; &#xA;IF OBJECT_ID('tempdb..#tmp') IS NOT NULL&#xA;    DROP TABLE #tmp&#xA;CREATE TABLE #tmp&#xA;(&#xA;    [db] NVARCHAR(128),&#xA;    [name] NVARCHAR(128),&#xA;    [size] decimal (12,2),&#xA;&#x9;[used] decimal (12,2),&#xA;) &#xA; &#xA;INSERT #tmp&#xA;EXEC sp_MSforeachdb 'use [?] SELECT db_name(), name ,size/128.0 - CAST(FILEPROPERTY(name, ''SpaceUsed'') AS int)/128.0, CAST(FILEPROPERTY(name, ''SpaceUsed'') AS int)/128.0 FROM sys.database_files where [state] =0 and type = ''1'''&#xA; &#xA;DECLARE @name AS NVARCHAR(128)&#xA;DECLARE @db AS NVARCHAR(128)&#xA;DECLARE @sql AS VARCHAR (294)&#xA;WHILE @@ROWCOUNT &gt; 0&#xA;BEGIN&#xA;    SET ROWCOUNT 1&#xA;    SELECT @name = name FROM #tmp&#xA;    SELECT @db = db FROM #tmp&#xA;/*&#xA; * check for log files that have 20 time &#xA; * their used space available. If the check &#xA; * returns true it will shrink the file to&#xA; * 20 time the space used.&#xA; *&#xA; * These values can be changed if necessary&#xA; */&#xA;    IF&#xA;    (SELECT (used*1) FROM #tmp WHERE db = @db and name = @name) &lt; (SELECT size FROM #tmp WHERE db = @db and name = @name)&#xA;&#x9;&#x9;BEGIN&#xA;&#x9;&#x9;    /*&#xA;&#x9;&#x9;     * Shrink to 20x used space&#xA;&#x9;&#x9;     */&#xA;&#x9;&#x9;    SET @sql =&#x9;'Use ['+ (select db from #tmp where db = @db and name = @name) + '] dbcc shrinkfile ([' + @name + '],' + cast(cast(round((select (used*20) from #tmp where [db] = @db and [name] = @name),0) as int) as varchar(12)) + ')'&#xA;&#x9;&#x9;&#x9;print @sql&#xA;&#x9;&#x9;    EXEC ( @sql )&#xA; &#xA;&#x9;&#x9;    /*&#xA;&#x9;&#x9;     * Release unused space&#xA;&#x9;&#x9;     */&#xA;&#x9;&#x9;    SET @sql =&#x9;'Use ['+ (select db from #tmp where db = @db and name = @name) + '] dbcc shrinkfile ([' + @name + '], 0 , TRUNCATEONLY)'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;print @sql&#xA;&#x9;&#x9;    EXEC ( @sql )&#x9;&#x9;&#xA;&#x9;&#x9;END&#xA;    DELETE FROM #tmp WHERE name = @name&#xA;END&#xA; &#xA;SET ROWCOUNT 0&#xA;SET NOCOUNT off&#xA;DROP TABLE #tmp" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Restore\Update  Status"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{66f255a9-59a6-41ef-9be5-7f3078ba249c}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Update  Status"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{324AC591-0DB7-4A83-AA41-CCA15B9E2151}"
              SQLTask:SqlStatementSource="DECLARE @BackupRestoreConfigID INT =?&#xA;DECLARE @BatchExecutionId  INT =?&#xA;&#xA;&#xA;  Update Devops.BatchExecution&#xA;  SET Status = 'InProgress'&#xA;  WHERE @BackupRestoreConfigID = @BackupRestoreConfigID&#xA;and BatchExecutionId =@BatchExecutionId" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="$Package::BackupRestoreConfigID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="$Package::BatchExecutionId"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Restore\Update Completed"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{8adea908-a61f-4366-aefa-dd5603fe6c60}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Update Completed"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="5">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{324AC591-0DB7-4A83-AA41-CCA15B9E2151}"
              SQLTask:SqlStatementSource="DECLARE @BackupRestoreConfigID INT =?&#xA;DECLARE @BatchExecutionId  INT =?&#xA;&#xA;&#xA;&#xA;  Update Devops.BatchExecution&#xA;  SET Status = 'Completed'&#xA; ,ErrorDesc= NULL&#xA;,BatchEnd =GetDate()&#xA;  WHERE @BackupRestoreConfigID = @BackupRestoreConfigID&#xA;and BatchExecutionId =@BatchExecutionId" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="$Package::BackupRestoreConfigID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="$Package::BatchExecutionId"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Restore\Update Failed"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{7e8ce9e2-19d2-42fd-9542-f93749f6e0da}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Update Failed"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="6">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{324AC591-0DB7-4A83-AA41-CCA15B9E2151}"
              SQLTask:SqlStatementSource="DECLARE @BackupRestoreConfigID INT =?&#xA;DECLARE @BatchExecutionId  INT =?&#xA;DECLARE @ErrorDesc VARCHAR(2000) =?&#xA;&#xA;&#xA;  Update Devops.BatchExecution&#xA;  SET Status = 'Failed'&#xA; ,ErrorDesc= @ErrorDesc&#xA;  WHERE @BackupRestoreConfigID = @BackupRestoreConfigID&#xA;and BatchExecutionId =@BatchExecutionId" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="$Package::BackupRestoreConfigID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="$Package::BatchExecutionId"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::strErrorDes"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Restore.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{2F0D9548-92A1-49EA-B5A1-BAF59A8F2CC0}"
          DTS:From="Package\Restore\Kill Sessions"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Restore\Delete Existing Snapshot"
          DTS:Value="2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Restore.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{a7de94fc-dbfa-4a02-991f-fbfc709c5a20}"
          DTS:EvalOp="3"
          DTS:Expression="@[$Package::AWOSetup] ==True"
          DTS:From="Package\Restore\AWO"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Restore\Remove From ADO" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Restore.PrecedenceConstraints[Constraint 10]"
          DTS:CreationName=""
          DTS:DTSID="{AB8FFD8D-2FA3-454E-875D-1C505A122371}"
          DTS:EvalOp="3"
          DTS:Expression="@[$Package::OverrideExistingDB]==False"
          DTS:From="Package\Restore\OverrideDB"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 10"
          DTS:To="Package\Restore\NewDB" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Restore.PrecedenceConstraints[Constraint 11]"
          DTS:CreationName=""
          DTS:DTSID="{89FFD687-A03D-4927-8316-C617686B5782}"
          DTS:From="Package\Restore\Delete Existing Snapshot"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 11"
          DTS:To="Package\Restore\MultiUser" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Restore.PrecedenceConstraints[Constraint 12]"
          DTS:CreationName=""
          DTS:DTSID="{C446A087-98AC-4B11-982A-1BFB1E301F87}"
          DTS:From="Package\Restore\MultiUser"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 12"
          DTS:To="Package\Restore\AWO"
          DTS:Value="2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Restore.PrecedenceConstraints[Constraint 13]"
          DTS:CreationName=""
          DTS:DTSID="{E019A739-5705-4182-A2AD-0CA21E864F79}"
          DTS:From="Package\Restore\Update  Status"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 13"
          DTS:To="Package\Restore\Kill Sessions" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Restore.PrecedenceConstraints[Constraint 14]"
          DTS:CreationName=""
          DTS:DTSID="{F4E38BE5-58AB-42A1-9A8B-855E8B2A782C}"
          DTS:From="Package\Restore\Update Completed"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 14"
          DTS:To="Package\Restore\Create Snapshot" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Restore.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{1984F5F3-E58C-4DFC-9D7E-AA9188719048}"
          DTS:EvalOp="3"
          DTS:Expression="@[$Package::OverrideExistingDB]==True"
          DTS:From="Package\Restore\OverrideDB"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Restore\OverrideExisitngDB" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Restore.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{AD674BCD-87AF-4F68-A936-DA0A8AEDD29F}"
          DTS:From="Package\Restore\Remove From ADO"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Restore\Update Completed" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Restore.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{A501712C-A58E-443D-8431-EDD12D1598AC}"
          DTS:From="Package\Restore\OverrideExisitngDB"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\Restore\Update Completed" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Restore.PrecedenceConstraints[Constraint 5]"
          DTS:CreationName=""
          DTS:DTSID="{FFABA37E-C8EB-4BBD-BC59-364EA2C448C1}"
          DTS:EvalOp="3"
          DTS:Expression="@[$Package::AWOSetup]==False"
          DTS:From="Package\Restore\AWO"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 5"
          DTS:To="Package\Restore\OverrideDB" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Restore.PrecedenceConstraints[Constraint 6]"
          DTS:CreationName=""
          DTS:DTSID="{58B652D7-07A2-4FD5-88FC-03912570321D}"
          DTS:From="Package\Restore\NewDB"
          DTS:ObjectName="Constraint 6"
          DTS:To="Package\Restore\Update Completed" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Restore.PrecedenceConstraints[Constraint 7]"
          DTS:CreationName=""
          DTS:DTSID="{E6447E57-8E70-4799-A632-A422416DFDEA}"
          DTS:From="Package\Restore\NewDB"
          DTS:ObjectName="Constraint 7"
          DTS:To="Package\Restore\Update Failed"
          DTS:Value="1" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Restore.PrecedenceConstraints[Constraint 8]"
          DTS:CreationName=""
          DTS:DTSID="{BA4E6C43-95A7-420B-B1A7-A48B0343212A}"
          DTS:From="Package\Restore\OverrideExisitngDB"
          DTS:ObjectName="Constraint 8"
          DTS:To="Package\Restore\Update Failed"
          DTS:Value="1" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Restore.PrecedenceConstraints[Constraint 9]"
          DTS:CreationName=""
          DTS:DTSID="{5F5A4D8C-FE7E-4B8D-9B52-2E1BBC400AA2}"
          DTS:From="Package\Restore\Remove From ADO"
          DTS:ObjectName="Constraint 9"
          DTS:To="Package\Restore\Update Failed"
          DTS:Value="1" />
      </DTS:PrecedenceConstraints>
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\Restore.EventHandlers[OnError]"
          DTS:CreationName="OnError"
          DTS:DTSID="{A51960F6-5D90-4505-81BB-0A6A5AA2401C}"
          DTS:EventID="578863608"
          DTS:EventName="OnError"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{3EDAD9C9-7286-4CCD-8874-3F39FA6DF69A}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Restore.EventHandlers[OnError]\Script Task"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Script Task"
              DTS:DTSID="{BB2A4C63-9CCF-46F2-B252-C4F446415A98}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="Script Task">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_7f28eeae1983421fad1db62ebb482474"
                  VSTAMajorVersion="3"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="System::ErrorDescription"
                  ReadWriteVariables="User::strErrorDes">
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_7f28eeae1983421fad1db62ebb482474")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_7f28eeae1983421fad1db62ebb482474")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_7f28eeae1983421fad1db62ebb482474
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            //System::ErrorDescription

            

            Dts.Variables["User::strErrorDes"].Value = Dts.Variables["User::strErrorDes"].Value.ToString() + Dts.Variables["System::ErrorDescription"].Value.ToString();

           // MessageBox.Show(Dts.Variables["User::strErrorDes"].Value.ToString());

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="ST_7f28eeae1983421fad1db62ebb482474.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{77d59a8b-7a1c-4494-a09c-8596b752e7cf}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_7f28eeae1983421fad1db62ebb482474</RootNamespace>
    <AssemblyName>ST_7f28eeae1983421fad1db62ebb482474</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_7f28eeae1983421fad1db62ebb482474</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_7f28eeae1983421fad1db62ebb482474</msb:DisplayName>
		<msb:ProjectId>{F7AEC810-992B-43CC-BA95-5FB6F6A35EA5}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_7f28eeae1983421fad1db62ebb482474.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7f28eeae1983421fad1db62ebb482474.Properties.Settings.get_Default():ST_7f28eeae1983421fad1db62ebb482474.Properties.Sett" +
    "ings")]

namespace ST_7f28eeae1983421fad1db62ebb482474.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7f28eeae1983421fad1db62ebb482474.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7f28eeae1983421fad1db62ebb482474.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7f28eeae1983421fad1db62ebb482474.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_7f28eeae1983421fad1db62ebb482474.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_7f28eeae1983421fad1db62ebb482474.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_7f28eeae1983421fad1db62ebb482474.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDACzrgloAAAAAAAAAAOAAAiELAQsAABAAAAAIAAAAAAAAji4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAADwuAABPAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAlA4AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABw
LgAAAAAAAEgAAAACAAUA+CEAAEQMAAABAAAAAAAAAEAhAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqAAMwBABqAAAAAAAAAAIoFgAACm8XAAAKcnMAAHBvGAAACgIoFgAACm8X
AAAKcnMAAHBvGAAACm8ZAAAKbxoAAAoCKBYAAApvFwAACnKXAABwbxgAAApvGQAACm8aAAAKKBsA
AApvHAAACgIoFgAAChZvHQAACioeAigeAAAKKgAAAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVt
LlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3Vs
dHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNv
dXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pCAQABAAAA
AAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAADQAwAAI34AADwEAADEBQAAI1N0cmluZ3MAAAAAAAoA
AMwAAAAjVVMAzAoAABAAAAAjR1VJRAAAANwKAABoAQAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJAwAA
APolMwAWAAABAAAAHgAAAAUAAAAGAAAACQAAAAEAAAAeAAAAAgAAAA8AAAABAAAAAgAAAAMAAAAE
AAAAAQAAAAQAAAABAAAAAQAAAAAACgABAAAAAAAGAMEAugAKAN0AyAAOAD0BFAEGAFkBugAGAG8B
XgEGAKABiwEGAFcCPQIGAIICcAIGAJkCcAIGALYCcAIGANUCcAIGAO4CcAIGAAcDcAIGACIDcAIG
AD0DcAIGAFYDcAIGAI8DbwMGAK8DbwMGAOADzQMGAP0DugAGAAIEugAGACYEcAIKAFIEPAQKAGsE
PAQGAIAEbwMOAKIEFAEOAMQEFAESAB0F/QQSADUF/QQGAFoFugAAAAAAAQAAAAAAAQABAAAAEAAy
ADwABQABAAEAAAEQAGsAPAAJAAMABQABABAAdAB/AA0ABAAIAAMBAACjAAAAEQAEAAoAEQB/ARMA
EQCsARcAEQD2ATkABgYfAkcAVoAnAkoAVoAvAkoAUCAAAAAAgxi8ARsAAQBYIAAAAACTCMIBHwAB
AJEgAAAAAJMI1gEkAAEAmCAAAAAAkwjiASkAAQCgIAAAAACWCAYCPQACALMgAAAAAIYYvAEbAAIA
pyAAAAAAkRibBIkAAgC8IAAAAACGABoCGwACADIhAAAAAIYYvAEbAAIAAAABADcCOQC8AVgAQQC8
AVgASQC8AVgAUQC8AVgAWQC8AVgAYQC8AVgAaQC8AVgAcQC8AVgAeQC8AVgAgQC8AVgAiQC8AV0A
kQC8ARsAmQC8ARsACQC8ARsAoQAUBGIAoQAvBGkAKQC8AW4AuQC8AXoAyQC8ARsAEQC8ARsA0QC8
ARsAGQDWBI0A2QAnBZIA4QA+BZcA6QBHBZ0ACQBRBaEA8QBhBaUA6QBoBasA2QByBV0AGQC8ARsA
CAAUAE4ACAAYAFMAKQCTAIAALgAbACEBLgAjACEBLgBjAEcBLgALALAALgATAPgALgAzAPgALgAr
ACEBLgA7ACcBLgBDACEBLgBbAD4BQwBrAFMASQCTAIAAYQCbAFMAgwCrAFMAdQACAAEAAwADAAAA
bwEvAAAA7gE0AAAAEgJCAAIAAgADAAIAAwAFAAEABAAFAAIABQAHAASAAAABAAAA2hlWYAAAAAAA
AH8AAAAEAAAAAAAAAAAAAAABALEAAAAAAAQAAAAAAAAAAAAAAAEAugAAAAAACwAAAAAAAAAAAAAA
CgD1AAAAAAALAAAAAAAAAAAAAAAKAN4EAAAAAAAAAAABAAAAgQUAAAUABAAAAAAAADxNb2R1bGU+
AFNUXzdmMjhlZWFlMTk4MzQyMWZhZDFkYjYyZWJiNDgyNDc0LmRsbABSZXNvdXJjZXMAU1RfN2Yy
OGVlYWUxOTgzNDIxZmFkMWRiNjJlYmI0ODI0NzQuUHJvcGVydGllcwBTZXR0aW5ncwBTY3JpcHRN
YWluAFNUXzdmMjhlZWFlMTk4MzQyMWZhZDFkYjYyZWJiNDgyNDc0AFNjcmlwdFJlc3VsdHMAbXNj
b3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRp
bmdzQmFzZQBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZl
ci5EdHMuVGFza3MuU2NyaXB0VGFzawBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UARW51bQBT
eXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFs
aXphdGlvbgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1cmUALmN0b3IAZ2V0X1Jlc291cmNlTWFu
YWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0dXJlAGRlZmF1bHRJbnN0YW5jZQBnZXRf
RGVmYXVsdABEZWZhdWx0AE1haW4AdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAdmFsdWUAU3lzdGVt
LlJ1bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxl
Y3Rpb24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRl
AEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUA
QXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2Vt
Ymx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZl
cnNpb25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlv
blJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFN5c3Rl
bS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5
cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5D
b21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3Rh
dGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUALmNjdG9yAFNTSVNTY3JpcHRUYXNrRW50cnlQ
b2ludEF0dHJpYnV0ZQBTY3JpcHRPYmplY3RNb2RlbABnZXRfRHRzAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuTWFuYWdlZERUUwBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFZhcmlhYmxlcwBn
ZXRfVmFyaWFibGVzAFZhcmlhYmxlAGdldF9JdGVtAGdldF9WYWx1ZQBUb1N0cmluZwBTdHJpbmcA
Q29uY2F0AHNldF9WYWx1ZQBzZXRfVGFza1Jlc3VsdABTVF83ZjI4ZWVhZTE5ODM0MjFmYWQxZGI2
MmViYjQ4MjQ3NC5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAAHFTAFQAXwA3AGYAMgA4
AGUAZQBhAGUAMQA5ADgAMwA0ADIAMQBmAGEAZAAxAGQAYgA2ADIAZQBiAGIANAA4ADIANAA3ADQA
LgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAACNVAHMAZQByADoAOgBz
AHQAcgBFAHIAcgBvAHIARABlAHMAADFTAHkAcwB0AGUAbQA6ADoARQByAHIAbwByAEQAZQBzAGMA
cgBpAHAAdABpAG8AbgAAAAAA/hX4yoJCBkupvxo9u0WDgAAIt3pcVhk04IkIiYRdzYCAzJEDBhIV
AwYSGQMgAAEEAAASFQQAABIZBQABARIZBAgAEhUECAASGQMGEgwEAAASDAQIABIMAgYIAwYRFAQA
AAAABAEAAAAEIAEBDgQgAQEIBgABElERVQQgABJZBiACAQ4SWQQHARIVBSABARFhCAEAAgAAAAAA
AwAAAQQgABJtBCAAEnEFIAESdRwDIAAcAyAADgUAAg4ODgQgAQEcRwEAGi5ORVRGcmFtZXdvcmss
VmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0KAEA
I1NUXzdmMjhlZWFlMTk4MzQyMWZhZDFkYjYyZWJiNDgyNDc0AAAFAQAAAAAWAQARQ29weXJpZ2h0
IEAgIDIwMTgAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEAAGQuAAAA
AAAAAAAAAH4uAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwLgAAAAAAAAAAAAAAAF9Db3JEbGxN
YWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQBWYNoZAAABAFZg2hk/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAA
MAAwADAANABiADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBU
AF8ANwBmADIAOABlAGUAYQBlADEAOQA4ADMANAAyADEAZgBhAGQAMQBkAGIANgAyAGUAYgBiADQA
OAAyADQANwA0AAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYANgAx
ADgALgAyADQANgA2ADIAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8A
NwBmADIAOABlAGUAYQBlADEAOQA4ADMANAAyADEAZgBhAGQAMQBkAGIANgAyAGUAYgBiADQAOAAy
ADQANwA0AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADgAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBp
AGwAZQBuAGEAbQBlAAAAUwBUAF8ANwBmADIAOABlAGUAYQBlADEAOQA4ADMANAAyADEAZgBhAGQA
MQBkAGIANgAyAGUAYgBiADQAOAAyADQANwA0AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0
AE4AYQBtAGUAAAAAAFMAVABfADcAZgAyADgAZQBlAGEAZQAxADkAOAAzADQAMgAxAGYAYQBkADEA
ZABiADYAMgBlAGIAYgA0ADgAMgA0ADcANAAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4ANgA2ADEAOAAuADIANAA2ADYAMgAAAAAASAAPAAEAQQBzAHMAZQBtAGIA
bAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgA2ADEAOAAuADIANAA2ADYAMgAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAACQPgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:EventHandler>
      </DTS:EventHandlers>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Restore or Backup"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{92536EF0-C91D-4667-B4BD-D144F5CD349A}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Restore or Backup"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{324AC591-0DB7-4A83-AA41-CCA15B9E2151}"
          SQLTask:SqlStatementSource="SELECT 1" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Restored Check"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{069D3D70-8578-4D54-99D9-D631AB627FEF}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Restored Check"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="2">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{A01A4DE8-E16A-4262-B057-E3DD855948B5}"
          SQLTask:SqlStatementSource="DECLARE @BatchExecutionid int = ?&#xA;&#xA;DECLARE @Executionstatus int &#xA;&#xA;&#xA;IF EXISTS(select  Status from Devops.BatchExecution  B  where BatchExecutionId = @BatchExecutionid)&#xA;SET @Executionstatus  =1&#xA;ELSE&#xA;SET @Executionstatus  =0&#xA;&#xA;SELECT @Executionstatus  as Executionstatus"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::ExecutionStatus" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="$Package::BatchExecutionId"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{94CB63B7-D796-449F-B7D0-F4EDC852B98A}"
      DTS:EvalOp="3"
      DTS:Expression="@[User::ExecutionStatus] ==0"
      DTS:From="Package\Restored Check"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Restore" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{588ACCFC-DF33-4A32-8C9A-C2E988F3A541}"
      DTS:EvalOp="3"
      DTS:Expression="@[$Package::IsBackup]==true"
      DTS:From="Package\Restore or Backup"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Backup" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{603D4D5D-5882-4318-B931-95AFFE886F9B}"
      DTS:EvalOp="3"
      DTS:Expression="@[$Package::IsRestore]==True"
      DTS:From="Package\Restore or Backup"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Restored Check" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="128" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="130,42"
          Id="Package\Backup\Backup DB"
          TopLeft="227,107.5" />
        <NodeLayout
          Size="149,42"
          Id="Package\Backup\Update  Status"
          TopLeft="217.5,5.5" />
        <NodeLayout
          Size="166,42"
          Id="Package\Backup\Update Completed"
          TopLeft="209,209.5" />
        <NodeLayout
          Size="143,42"
          Id="Package\Backup\Update Failed"
          TopLeft="5.50000000000006,209.5" />
        <EdgeLayout
          Id="Package\Backup.PrecedenceConstraints[Constraint]"
          TopLeft="312.333333333333,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-20.3333333333333,60"
              Start="0,0"
              End="-20.3333333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4376899696049" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4376899696049"
                    Point2="0,24.4376899696049"
                    Point3="-4,24.4376899696049" />
                  <mssgle:LineSegment
                    End="-16.3333333333333,24.4376899696049" />
                  <mssgle:CubicBezierSegment
                    Point1="-16.3333333333333,24.4376899696049"
                    Point2="-20.3333333333333,24.4376899696049"
                    Point3="-20.3333333333333,28.4376899696049" />
                  <mssgle:LineSegment
                    End="-20.3333333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Backup.PrecedenceConstraints[Constraint 1]"
          TopLeft="271.666666666667,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-194.666666666667,60"
              Start="0,0"
              End="-194.666666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4376899696049" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4376899696049"
                    Point2="0,24.4376899696049"
                    Point3="-4,24.4376899696049" />
                  <mssgle:LineSegment
                    End="-190.666666666667,24.4376899696049" />
                  <mssgle:CubicBezierSegment
                    Point1="-190.666666666667,24.4376899696049"
                    Point2="-194.666666666667,24.4376899696049"
                    Point3="-194.666666666667,28.4376899696049" />
                  <mssgle:LineSegment
                    End="-194.666666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-112.574680989583,29.4376899696049,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Backup.PrecedenceConstraints[Constraint 2]"
          TopLeft="292,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="380,307"
          Size="380,350"
          Id="Package\Backup"
          TopLeft="1558.7619047619,241.190476190476" />
        <NodeLayout
          Size="103,42"
          Id="Package\Restore\AWO"
          TopLeft="66,209.5" />
        <NodeLayout
          Size="156,42"
          Id="Package\Restore\Create Snapshot"
          TopLeft="634,1527" />
        <NodeLayout
          Size="196,42"
          Id="Package\Restore\Delete Existing Snapshot"
          TopLeft="247,134" />
        <NodeLayout
          Size="136,42"
          Id="Package\Restore\Kill Sessions"
          TopLeft="282.5,23.5" />
        <NodeLayout
          Size="123,42"
          Id="Package\Restore\MultiUser"
          TopLeft="424,206" />
        <NodeLayout
          Size="156,42"
          Id="Package\Restore\NewDB\Create Snapshot"
          TopLeft="5.50000000000003,466.5" />
        <NodeLayout
          Size="185,42"
          Id="Package\Restore\NewDB\Drop Databsae If Exist"
          TopLeft="19.5,5.5" />
        <NodeLayout
          Size="213,42"
          Id="Package\Restore\NewDB\Remove Prod Users from DB"
          TopLeft="5.50000000000003,209.5" />
        <NodeLayout
          Size="132,42"
          Id="Package\Restore\NewDB\Restore DB"
          TopLeft="46,107.5" />
        <NodeLayout
          Size="204,42"
          Id="Package\Restore\NewDB\SET RecoveryMode-Simple"
          TopLeft="17.5,298.5" />
        <NodeLayout
          Size="130,42"
          Id="Package\Restore\NewDB\ShrinkLogs"
          TopLeft="44.5,364.5" />
        <EdgeLayout
          Id="Package\Restore\NewDB.PrecedenceConstraints[Constraint]"
          TopLeft="112,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Restore\NewDB.PrecedenceConstraints[Constraint 1]"
          TopLeft="112,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,18.25,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Restore\NewDB.PrecedenceConstraints[Constraint 2]"
          TopLeft="115.75,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,47"
              Start="0,0"
              End="0,39.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,39.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Restore\NewDB.PrecedenceConstraints[Constraint 3]"
          TopLeft="119.5,340.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-10,24"
              Start="0,0"
              End="-10,16.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,8" />
                  <mssgle:CubicBezierSegment
                    Point1="0,8"
                    Point2="0,12"
                    Point3="-4,12" />
                  <mssgle:LineSegment
                    End="-6,12" />
                  <mssgle:CubicBezierSegment
                    Point1="-6,12"
                    Point2="-10,12"
                    Point3="-10,16" />
                  <mssgle:LineSegment
                    End="-10,16.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Restore\NewDB.PrecedenceConstraints[Constraint 4]"
          TopLeft="109.5,406.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-26,60"
              Start="0,0"
              End="-26,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="-4,30" />
                  <mssgle:LineSegment
                    End="-22,30" />
                  <mssgle:CubicBezierSegment
                    Point1="-22,30"
                    Point2="-26,30"
                    Point3="-26,34" />
                  <mssgle:LineSegment
                    End="-26,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-38.304453125,35,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="236,647"
          Size="236,690"
          Id="Package\Restore\NewDB"
          TopLeft="589.5,719.5" />
        <NodeLayout
          Size="133,42"
          Id="Package\Restore\OverrideDB"
          TopLeft="343,311.5" />
        <NodeLayout
          Size="156,42"
          Id="Package\Restore\OverrideExisitngDB\Create Snapshot"
          TopLeft="23.5,566.5" />
        <NodeLayout
          Size="123,42"
          Id="Package\Restore\OverrideExisitngDB\MultiUser"
          TopLeft="54,213.5" />
        <NodeLayout
          Size="228,42"
          Id="Package\Restore\OverrideExisitngDB\Preserve Users and Permissions"
          TopLeft="5.5,5.5" />
        <NodeLayout
          Size="213,42"
          Id="Package\Restore\OverrideExisitngDB\Remove Prod Users from DB"
          TopLeft="13.0000000000001,417.5" />
        <NodeLayout
          Size="132,42"
          Id="Package\Restore\OverrideExisitngDB\Restore DB"
          TopLeft="52.5,145.5" />
        <NodeLayout
          Size="169,42"
          Id="Package\Restore\OverrideExisitngDB\Restore Save users"
          TopLeft="35.0000000000001,482.5" />
        <NodeLayout
          Size="204,42"
          Id="Package\Restore\OverrideExisitngDB\SET RecoveryMode-Simple"
          TopLeft="19.5,279.5" />
        <NodeLayout
          Size="130,42"
          Id="Package\Restore\OverrideExisitngDB\ShrinkLogs"
          TopLeft="54.5000000000001,350.5" />
        <NodeLayout
          Size="157,42"
          Id="Package\Restore\OverrideExisitngDB\SingleUser Mode"
          TopLeft="42,73.5" />
        <EdgeLayout
          Id="Package\Restore\OverrideExisitngDB.PrecedenceConstraints[Constraint]"
          TopLeft="120,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,26"
              Start="0,0"
              End="0,18.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Restore\OverrideExisitngDB.PrecedenceConstraints[Constraint 1]"
          TopLeft="119.5,115.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30"
              Start="0,0"
              End="0,22.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Restore\OverrideExisitngDB.PrecedenceConstraints[Constraint 2]"
          TopLeft="120.5,321.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,29"
              Start="0,0"
              End="0,21.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Restore\OverrideExisitngDB.PrecedenceConstraints[Constraint 3]"
          TopLeft="119.5,392.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,25"
              Start="0,0"
              End="0,17.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-25.304453125,2.9453125,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Restore\OverrideExisitngDB.PrecedenceConstraints[Constraint 4]"
          TopLeft="119.5,459.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,23"
              Start="0,0"
              End="0,15.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Restore\OverrideExisitngDB.PrecedenceConstraints[Constraint 5]"
          TopLeft="117,187.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,26"
              Start="0,0"
              End="0,18.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,1.25,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Restore\OverrideExisitngDB.PrecedenceConstraints[Constraint 6]"
          TopLeft="118.5,255.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,24"
              Start="0,0"
              End="0,16.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Restore\OverrideExisitngDB.PrecedenceConstraints[Constraint 7]"
          TopLeft="119.5,524.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-18.0000000000001,42"
              Start="0,0"
              End="-18.0000000000001,34.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17"
                    Point2="0,21"
                    Point3="-4,21" />
                  <mssgle:LineSegment
                    End="-14.0000000000001,21" />
                  <mssgle:CubicBezierSegment
                    Point1="-14.0000000000001,21"
                    Point2="-18.0000000000001,21"
                    Point3="-18.0000000000001,25" />
                  <mssgle:LineSegment
                    End="-18.0000000000001,34.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="239,682"
          Size="239,724"
          Id="Package\Restore\OverrideExisitngDB"
          TopLeft="290,600.5" />
        <NodeLayout
          Size="127,42"
          Id="Package\Restore\Remove From ADO\ADD AWO"
          TopLeft="48.5000000000001,719.5" />
        <NodeLayout
          Size="156,42"
          Id="Package\Restore\Remove From ADO\Create Snapshot"
          TopLeft="5.5000000000001,923.5" />
        <NodeLayout
          Size="185,42"
          Id="Package\Restore\Remove From ADO\Drop Databsae If Exist"
          TopLeft="19.5,107.5" />
        <NodeLayout
          Size="129,42"
          Id="Package\Restore\Remove From ADO\Move Logs"
          TopLeft="47.5000000000001,515.5" />
        <NodeLayout
          Size="168,42"
          Id="Package\Restore\Remove From ADO\Remove AWO"
          TopLeft="28,5.5" />
        <NodeLayout
          Size="213,42"
          Id="Package\Restore\Remove From ADO\Remove Prod Users from DB"
          TopLeft="5.5000000000001,821.5" />
        <NodeLayout
          Size="132,42"
          Id="Package\Restore\Remove From ADO\Restore DB"
          TopLeft="46,209.5" />
        <NodeLayout
          Size="170,42"
          Id="Package\Restore\Remove From ADO\SET TO FULL Mode"
          TopLeft="27.0000000000001,617.5" />
        <NodeLayout
          Size="185,42"
          Id="Package\Restore\Remove From ADO\SET TO SIMPLE Mode"
          TopLeft="19.5,311.5" />
        <NodeLayout
          Size="122,42"
          Id="Package\Restore\Remove From ADO\ShrinkDB"
          TopLeft="51.0000000000001,413.5" />
        <EdgeLayout
          Id="Package\Restore\Remove From ADO.PrecedenceConstraints[Constraint]"
          TopLeft="112,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Restore\Remove From ADO.PrecedenceConstraints[Constraint 1]"
          TopLeft="112,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Restore\Remove From ADO.PrecedenceConstraints[Constraint 1 1]"
          TopLeft="112,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-25.304453125,20.4453125,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Restore\Remove From ADO.PrecedenceConstraints[Constraint 2]"
          TopLeft="112,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Restore\Remove From ADO.PrecedenceConstraints[Constraint 2 1]"
          TopLeft="112,557.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-25.304453125,20.4453125,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Restore\Remove From ADO.PrecedenceConstraints[Constraint 3]"
          TopLeft="112,659.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Restore\Remove From ADO.PrecedenceConstraints[Constraint 4]"
          TopLeft="112,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,18.25,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Restore\Remove From ADO.PrecedenceConstraints[Constraint 5]"
          TopLeft="112,761.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Restore\Remove From ADO.PrecedenceConstraints[Constraint 6]"
          TopLeft="112,863.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-28.5,60"
              Start="0,0"
              End="-28.5,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="-4,30" />
                  <mssgle:LineSegment
                    End="-24.5,30" />
                  <mssgle:CubicBezierSegment
                    Point1="-24.5,30"
                    Point2="-28.5,30"
                    Point3="-28.5,34" />
                  <mssgle:LineSegment
                    End="-28.5,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="224,1021"
          Size="224,1064"
          Id="Package\Restore\Remove From ADO"
          TopLeft="5.50000000000011,413.5" />
        <NodeLayout
          Size="131,42"
          Id="Package\Restore\Script Task"
          TopLeft="454.5,411.75" />
        <NodeLayout
          Size="122,42"
          Id="Package\Restore\ShrinkDB"
          TopLeft="56.5,107.5" />
        <NodeLayout
          Size="149,42"
          Id="Package\Restore\Update  Status"
          TopLeft="43,5.5" />
        <NodeLayout
          Size="166,42"
          Id="Package\Restore\Update Completed"
          TopLeft="618.5,1435.5" />
        <NodeLayout
          Size="143,42"
          Id="Package\Restore\Update Failed"
          TopLeft="223,1435.5" />
        <EdgeLayout
          Id="Package\Restore.PrecedenceConstraints[Constraint]"
          TopLeft="347.75,65.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,68.5"
              Start="0,0"
              End="0,61">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,61" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-25.304453125,24.6953125,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Restore.PrecedenceConstraints[Constraint 1]"
          TopLeft="101.666666666667,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="15.8333333333335,162"
              Start="0,0"
              End="15.8333333333335,154.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,62.2868068833652" />
                  <mssgle:CubicBezierSegment
                    Point1="0,62.2868068833652"
                    Point2="0,66.2868068833652"
                    Point3="4,66.2868068833652" />
                  <mssgle:LineSegment
                    End="11.8333333333335,66.2868068833652" />
                  <mssgle:CubicBezierSegment
                    Point1="11.8333333333335,66.2868068833652"
                    Point2="15.8333333333335,66.2868068833652"
                    Point3="15.8333333333335,70.2868068833652" />
                  <mssgle:LineSegment
                    End="15.8333333333335,154.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-0.0833333333332504,71.2868068833652,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Restore.PrecedenceConstraints[Constraint 10]"
          TopLeft="430.333333333333,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="277.166666666667,366"
              Start="0,0"
              End="277.166666666667,358.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,145.010401188707" />
                  <mssgle:CubicBezierSegment
                    Point1="0,145.010401188707"
                    Point2="0,149.010401188707"
                    Point3="4,149.010401188707" />
                  <mssgle:LineSegment
                    End="273.166666666667,149.010401188707" />
                  <mssgle:CubicBezierSegment
                    Point1="273.166666666667,149.010401188707"
                    Point2="277.166666666667,149.010401188707"
                    Point3="277.166666666667,153.010401188707" />
                  <mssgle:LineSegment
                    End="277.166666666667,358.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="130.583333333334,154.010401188707,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Restore.PrecedenceConstraints[Constraint 11]"
          TopLeft="345,176">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="140.5,30"
              Start="0,0"
              End="140.5,22.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,11" />
                  <mssgle:CubicBezierSegment
                    Point1="0,11"
                    Point2="0,15"
                    Point3="4,15" />
                  <mssgle:LineSegment
                    End="136.5,15" />
                  <mssgle:CubicBezierSegment
                    Point1="136.5,15"
                    Point2="140.5,15"
                    Point3="140.5,19" />
                  <mssgle:LineSegment
                    End="140.5,22.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Restore.PrecedenceConstraints[Constraint 12]"
          TopLeft="424,228.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-255,0"
              Start="0,0"
              End="-247.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-247.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-149.054453125,5,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Restore.PrecedenceConstraints[Constraint 13]"
          TopLeft="192,26.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="90.5000000000001,18"
              Start="0,0"
              End="83.0000000000001,18">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="41.2500000000001,0" />
                  <mssgle:CubicBezierSegment
                    Point1="41.2500000000001,0"
                    Point2="45.2500000000001,0"
                    Point3="45.2500000000001,4" />
                  <mssgle:LineSegment
                    End="45.2500000000001,14" />
                  <mssgle:CubicBezierSegment
                    Point1="45.2500000000001,14"
                    Point2="45.2500000000001,18"
                    Point3="49.2500000000001,18" />
                  <mssgle:LineSegment
                    End="83.0000000000001,18" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Restore.PrecedenceConstraints[Constraint 14]"
          TopLeft="701.5,1477.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="10.5,49.5"
              Start="0,0"
              End="10.5,42">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.75" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.75"
                    Point2="0,24.75"
                    Point3="4,24.75" />
                  <mssgle:LineSegment
                    End="6.5,24.75" />
                  <mssgle:CubicBezierSegment
                    Point1="6.5,24.75"
                    Point2="10.5,24.75"
                    Point3="10.5,28.75" />
                  <mssgle:LineSegment
                    End="10.5,42" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Restore.PrecedenceConstraints[Constraint 2]"
          TopLeft="388.666666666667,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="20.8333333333333,247"
              Start="0,0"
              End="20.8333333333333,239.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,96.5616641901932" />
                  <mssgle:CubicBezierSegment
                    Point1="0,96.5616641901932"
                    Point2="0,100.561664190193"
                    Point3="4,100.561664190193" />
                  <mssgle:LineSegment
                    End="16.8333333333333,100.561664190193" />
                  <mssgle:CubicBezierSegment
                    Point1="16.8333333333333,100.561664190193"
                    Point2="20.8333333333333,100.561664190193"
                    Point3="20.8333333333333,104.561664190193" />
                  <mssgle:LineSegment
                    End="20.8333333333333,239.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="2.41666666666665,105.561664190193,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Restore.PrecedenceConstraints[Constraint 3]"
          TopLeft="229.5,945.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="389,511"
              Start="0,0"
              End="381.5,511">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="190.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="190.5,0"
                    Point2="194.5,0"
                    Point3="194.5,4" />
                  <mssgle:LineSegment
                    End="194.5,507" />
                  <mssgle:CubicBezierSegment
                    Point1="194.5,507"
                    Point2="194.5,511"
                    Point3="198.5,511" />
                  <mssgle:LineSegment
                    End="381.5,511" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Restore.PrecedenceConstraints[Constraint 4]"
          TopLeft="448,1324.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="253.5,111"
              Start="0,0"
              End="253.5,103.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.8428927680798" />
                  <mssgle:CubicBezierSegment
                    Point1="0,40.8428927680798"
                    Point2="0,44.8428927680798"
                    Point3="4,44.8428927680798" />
                  <mssgle:LineSegment
                    End="249.5,44.8428927680798" />
                  <mssgle:CubicBezierSegment
                    Point1="249.5,44.8428927680798"
                    Point2="253.5,44.8428927680798"
                    Point3="253.5,48.8428927680798" />
                  <mssgle:LineSegment
                    End="253.5,103.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Restore.PrecedenceConstraints[Constraint 5]"
          TopLeft="133.333333333333,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="276.166666666667,60"
              Start="0,0"
              End="276.166666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.5506692160612" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.5506692160612"
                    Point2="0,24.5506692160612"
                    Point3="4,24.5506692160612" />
                  <mssgle:LineSegment
                    End="272.166666666667,24.5506692160612" />
                  <mssgle:CubicBezierSegment
                    Point1="272.166666666667,24.5506692160612"
                    Point2="276.166666666667,24.5506692160612"
                    Point3="276.166666666667,28.5506692160612" />
                  <mssgle:LineSegment
                    End="276.166666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="130.083333333334,29.5506692160612,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Restore.PrecedenceConstraints[Constraint 6]"
          TopLeft="745.5,1409.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-17.6666666666666,26"
              Start="0,0"
              End="-17.6666666666666,18.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,8.95447723861931" />
                  <mssgle:CubicBezierSegment
                    Point1="0,8.95447723861931"
                    Point2="0,12.9544772386193"
                    Point3="-4,12.9544772386193" />
                  <mssgle:LineSegment
                    End="-13.6666666666666,12.9544772386193" />
                  <mssgle:CubicBezierSegment
                    Point1="-13.6666666666666,12.9544772386193"
                    Point2="-17.6666666666666,12.9544772386193"
                    Point3="-17.6666666666666,16.9544772386193" />
                  <mssgle:LineSegment
                    End="-17.6666666666666,18.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Restore.PrecedenceConstraints[Constraint 7]"
          TopLeft="669.5,1409.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-341.25,26"
              Start="0,0"
              End="-341.25,18.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10.6169344930955" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10.6169344930955"
                    Point2="0,14.6169344930955"
                    Point3="-4,14.6169344930955" />
                  <mssgle:LineSegment
                    End="-337.25,14.6169344930955" />
                  <mssgle:CubicBezierSegment
                    Point1="-337.25,14.6169344930955"
                    Point2="-341.25,14.6169344930955"
                    Point3="-341.25,18.6169344930955" />
                  <mssgle:LineSegment
                    End="-341.25,18.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-185.86634765625,19.6169344930955,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Restore.PrecedenceConstraints[Constraint 8]"
          TopLeft="371,1324.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-76.5,111"
              Start="0,0"
              End="-76.5,103.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.8428927680798" />
                  <mssgle:CubicBezierSegment
                    Point1="0,40.8428927680798"
                    Point2="0,44.8428927680798"
                    Point3="-4,44.8428927680798" />
                  <mssgle:LineSegment
                    End="-72.5,44.8428927680798" />
                  <mssgle:CubicBezierSegment
                    Point1="-72.5,44.8428927680798"
                    Point2="-76.5,44.8428927680798"
                    Point3="-76.5,48.8428927680798" />
                  <mssgle:LineSegment
                    End="-76.5,103.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-53.49134765625,49.8428927680798,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Restore.PrecedenceConstraints[Constraint 9]"
          TopLeft="229.5,945.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="31.2499999999999,490"
              Start="0,0"
              End="31.2499999999999,482.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="27.2499999999999,0" />
                  <mssgle:CubicBezierSegment
                    Point1="27.2499999999999,0"
                    Point2="31.2499999999999,0"
                    Point3="31.2499999999999,4" />
                  <mssgle:LineSegment
                    End="31.2499999999999,482.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="16.0086523437499,-15.7490234375,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="1079,1635"
          Size="1079,1678"
          Id="Package\Restore"
          TopLeft="220,208.000000000001" />
        <NodeLayout
          Size="165,42"
          Id="Package\Restore or Backup"
          TopLeft="696,57.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="804.666666666667,99.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="944.095238095233,141.690476190476"
              Start="0,0"
              End="944.095238095233,134.190476190476">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,53.4926542045389" />
                  <mssgle:CubicBezierSegment
                    Point1="0,53.4926542045389"
                    Point2="0,57.4926542045389"
                    Point3="4,57.4926542045389" />
                  <mssgle:LineSegment
                    End="940.095238095233,57.4926542045389" />
                  <mssgle:CubicBezierSegment
                    Point1="940.095238095233,57.4926542045389"
                    Point2="944.095238095233,57.4926542045389"
                    Point3="944.095238095233,61.4926542045389" />
                  <mssgle:LineSegment
                    End="944.095238095233,134.190476190476" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="464.047619047617,62.4926542045389,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="152,42"
          Id="Package\Restored Check"
          TopLeft="479,130" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="752.333333333333,99.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-197.333333333333,30.5"
              Start="0,0"
              End="-197.333333333333,23">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,8.37575030012005" />
                  <mssgle:CubicBezierSegment
                    Point1="0,8.37575030012005"
                    Point2="0,12.3757503001201"
                    Point3="-4,12.3757503001201" />
                  <mssgle:LineSegment
                    End="-193.333333333333,12.3757503001201" />
                  <mssgle:CubicBezierSegment
                    Point1="-193.333333333333,12.3757503001201"
                    Point2="-197.333333333333,12.3757503001201"
                    Point3="-197.333333333333,16.3757503001201" />
                  <mssgle:LineSegment
                    End="-197.333333333333,23" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-106.666666666667,17.3757503001201,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="555,172">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="204.5,36.0000000000009"
              Start="0,0"
              End="204.5,28.5000000000009">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.0000000000005" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.0000000000005"
                    Point2="0,18.0000000000005"
                    Point3="4,18.0000000000005" />
                  <mssgle:LineSegment
                    End="200.5,18.0000000000005" />
                  <mssgle:CubicBezierSegment
                    Point1="200.5,18.0000000000005"
                    Point2="204.5,18.0000000000005"
                    Point3="204.5,22.0000000000005" />
                  <mssgle:LineSegment
                    End="204.5,28.5000000000009" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="94.25,23.0000000000005,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package\Backup.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package\Backup.EventHandlers[OnError]\Script Task"
          TopLeft="NaN,NaN" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Backup\Backup DB.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package\Backup\Backup DB.EventHandlers[OnError]\UpdateScript"
          TopLeft="NaN,NaN" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Backup\Backup DB.EventHandlers[OnError]\UpdateScript.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="139,42"
          Id="Package\Backup\Backup DB.EventHandlers[OnError]\UpdateScript.EventHandlers[OnError]\UpdateScript"
          TopLeft="5.5,5.5" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Restore.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package\Restore.EventHandlers[OnError]\Script Task"
          TopLeft="NaN,NaN" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Restore\NewDB\Restore DB.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="142,42"
          Id="{54f7d2e1-0fcb-4169-aed0-cd043e39f536}"
          TopLeft="60,60" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Restore\OverrideExisitngDB\Restore DB.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="142,42"
          Id="{54f7d2e1-0fcb-4169-aed0-cd043e39f536}"
          TopLeft="60,60" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Restore\Remove From ADO\Restore DB.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="142,42"
          Id="{54f7d2e1-0fcb-4169-aed0-cd043e39f536}"
          TopLeft="60,60" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>